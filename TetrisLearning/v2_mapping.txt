bitter.jnibridge.JNIBridge -> bitter.jnibridge.JNIBridge:
    void <init>() -> <init>
    java.lang.Object invoke(long,java.lang.Class,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    void delete(long) -> delete
    java.lang.Object newInterfaceProxy(long,java.lang.Class[]) -> newInterfaceProxy
    void disableInterfaceProxy(java.lang.Object) -> disableInterfaceProxy
bitter.jnibridge.JNIBridge$a -> bitter.jnibridge.JNIBridge$a:
    java.lang.Object a -> a
    long b -> b
    java.lang.reflect.Constructor c -> c
    void <init>(long) -> <init>
    java.lang.Object a(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> a
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    void finalize() -> finalize
    void a() -> a
com.android.vending.billing.BuildConfig -> com.android.vending.billing.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.vending.billing.IInAppBillingService -> com.android.vending.billing.IInAppBillingService:
    int isBillingSupported(int,java.lang.String,java.lang.String) -> isBillingSupported
    android.os.Bundle getSkuDetails(int,java.lang.String,java.lang.String,android.os.Bundle) -> getSkuDetails
    android.os.Bundle getBuyIntent(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getBuyIntent
    android.os.Bundle getPurchases(int,java.lang.String,java.lang.String,java.lang.String) -> getPurchases
    int consumePurchase(int,java.lang.String,java.lang.String) -> consumePurchase
    int isPromoEligible(int,java.lang.String,java.lang.String) -> isPromoEligible
    android.os.Bundle getBuyIntentToReplaceSkus(int,java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String) -> getBuyIntentToReplaceSkus
    android.os.Bundle getBuyIntentExtraParams(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> getBuyIntentExtraParams
    android.os.Bundle getPurchaseHistory(int,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> getPurchaseHistory
    int isBillingSupportedExtraParams(int,java.lang.String,java.lang.String,android.os.Bundle) -> isBillingSupportedExtraParams
    android.os.Bundle getPurchasesExtraParams(int,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> getPurchasesExtraParams
    int consumePurchaseExtraParams(int,java.lang.String,java.lang.String,android.os.Bundle) -> consumePurchaseExtraParams
com.android.vending.billing.IInAppBillingService$Stub -> com.android.vending.billing.IInAppBillingService$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_isBillingSupported -> TRANSACTION_isBillingSupported
    int TRANSACTION_getSkuDetails -> TRANSACTION_getSkuDetails
    int TRANSACTION_getBuyIntent -> TRANSACTION_getBuyIntent
    int TRANSACTION_getPurchases -> TRANSACTION_getPurchases
    int TRANSACTION_consumePurchase -> TRANSACTION_consumePurchase
    int TRANSACTION_isPromoEligible -> TRANSACTION_isPromoEligible
    int TRANSACTION_getBuyIntentToReplaceSkus -> TRANSACTION_getBuyIntentToReplaceSkus
    int TRANSACTION_getBuyIntentExtraParams -> TRANSACTION_getBuyIntentExtraParams
    int TRANSACTION_getPurchaseHistory -> TRANSACTION_getPurchaseHistory
    int TRANSACTION_isBillingSupportedExtraParams -> TRANSACTION_isBillingSupportedExtraParams
    int TRANSACTION_getPurchasesExtraParams -> TRANSACTION_getPurchasesExtraParams
    int TRANSACTION_consumePurchaseExtraParams -> TRANSACTION_consumePurchaseExtraParams
    void <init>() -> <init>
    com.android.vending.billing.IInAppBillingService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.android.vending.billing.IInAppBillingService$Stub$Proxy -> com.android.vending.billing.IInAppBillingService$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    int isBillingSupported(int,java.lang.String,java.lang.String) -> isBillingSupported
    android.os.Bundle getSkuDetails(int,java.lang.String,java.lang.String,android.os.Bundle) -> getSkuDetails
    android.os.Bundle getBuyIntent(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getBuyIntent
    android.os.Bundle getPurchases(int,java.lang.String,java.lang.String,java.lang.String) -> getPurchases
    int consumePurchase(int,java.lang.String,java.lang.String) -> consumePurchase
    int isPromoEligible(int,java.lang.String,java.lang.String) -> isPromoEligible
    android.os.Bundle getBuyIntentToReplaceSkus(int,java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String) -> getBuyIntentToReplaceSkus
    android.os.Bundle getBuyIntentExtraParams(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> getBuyIntentExtraParams
    android.os.Bundle getPurchaseHistory(int,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> getPurchaseHistory
    int isBillingSupportedExtraParams(int,java.lang.String,java.lang.String,android.os.Bundle) -> isBillingSupportedExtraParams
    android.os.Bundle getPurchasesExtraParams(int,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> getPurchasesExtraParams
    int consumePurchaseExtraParams(int,java.lang.String,java.lang.String,android.os.Bundle) -> consumePurchaseExtraParams
com.android.vending.billing.R -> com.android.vending.billing.R:
    void <init>() -> <init>
com.google.androidgamesdk.ChoreographerCallback -> com.google.androidgamesdk.ChoreographerCallback:
    java.lang.String LOG_TAG -> LOG_TAG
    long mCookie -> mCookie
    com.google.androidgamesdk.ChoreographerCallback$a mLooper -> mLooper
    void <init>(long) -> <init>
    void postFrameCallback() -> postFrameCallback
    void postFrameCallbackDelayed(long) -> postFrameCallbackDelayed
    void terminate() -> terminate
    void doFrame(long) -> doFrame
    void nOnChoreographer(long,long) -> nOnChoreographer
com.google.androidgamesdk.ChoreographerCallback$1 -> com.google.androidgamesdk.ChoreographerCallback$1:
    com.google.androidgamesdk.ChoreographerCallback a -> a
    void <init>(com.google.androidgamesdk.ChoreographerCallback) -> <init>
    void run() -> run
com.google.androidgamesdk.ChoreographerCallback$a -> com.google.androidgamesdk.ChoreographerCallback$a:
    android.os.Handler a -> a
    com.google.androidgamesdk.ChoreographerCallback b -> b
    void <init>(com.google.androidgamesdk.ChoreographerCallback) -> <init>
    void run() -> run
    void <init>(com.google.androidgamesdk.ChoreographerCallback,byte) -> <init>
com.google.androidgamesdk.SwappyDisplayManager -> com.google.androidgamesdk.SwappyDisplayManager:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean DEBUG -> DEBUG
    long ONE_MS_IN_NS -> ONE_MS_IN_NS
    long ONE_S_IN_NS -> ONE_S_IN_NS
    long mCookie -> mCookie
    android.app.Activity mActivity -> mActivity
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display$Mode mCurrentMode -> mCurrentMode
    com.google.androidgamesdk.SwappyDisplayManager$a mLooper -> mLooper
    boolean modeMatchesCurrentResolution(android.view.Display$Mode) -> modeMatchesCurrentResolution
    void <init>(long,android.app.Activity) -> <init>
    void updateSupportedRefreshRates(android.view.Display) -> updateSupportedRefreshRates
    void setPreferredRefreshRate(int) -> setPreferredRefreshRate
    void terminate() -> terminate
    void onDisplayAdded(int) -> onDisplayAdded
    void onDisplayRemoved(int) -> onDisplayRemoved
    void onDisplayChanged(int) -> onDisplayChanged
    boolean callNativeCallback() -> callNativeCallback
    void nSetSupportedRefreshRates(long,long[],int[]) -> nSetSupportedRefreshRates
    void nOnRefreshRateChanged(long,long,long,long) -> nOnRefreshRateChanged
    android.app.Activity access$100(com.google.androidgamesdk.SwappyDisplayManager) -> access$100
com.google.androidgamesdk.SwappyDisplayManager$1 -> com.google.androidgamesdk.SwappyDisplayManager$1:
    int a -> a
    com.google.androidgamesdk.SwappyDisplayManager b -> b
    void <init>(com.google.androidgamesdk.SwappyDisplayManager,int) -> <init>
    void run() -> run
com.google.androidgamesdk.SwappyDisplayManager$a -> com.google.androidgamesdk.SwappyDisplayManager$a:
    android.os.Handler a -> a
    java.util.concurrent.locks.Lock c -> c
    java.util.concurrent.locks.Condition d -> d
    com.google.androidgamesdk.SwappyDisplayManager b -> b
    void <init>(com.google.androidgamesdk.SwappyDisplayManager) -> <init>
    void start() -> start
    void run() -> run
    void <init>(com.google.androidgamesdk.SwappyDisplayManager,byte) -> <init>
com.unity.purchasing.BuildConfig -> com.unity.purchasing.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.unity.purchasing.R -> com.unity.purchasing.R:
    void <init>() -> <init>
com.unity.purchasing.common.DelayedHandler -> com.unity.purchasing.common.DelayedHandler:
    android.os.Handler handler -> a
    void <init>() -> <init>
    void ExecuteDelayed(java.lang.Runnable,long) -> ExecuteDelayed
com.unity.purchasing.common.IDelayedExecutor -> com.unity.purchasing.common.IDelayedExecutor:
    void ExecuteDelayed(java.lang.Runnable,long) -> ExecuteDelayed
com.unity.purchasing.common.INativeStore -> com.unity.purchasing.common.INativeStore:
    void RetrieveProducts(java.lang.String) -> RetrieveProducts
    void Purchase(java.lang.String,java.lang.String) -> Purchase
    void FinishTransaction(java.lang.String,java.lang.String) -> FinishTransaction
com.unity.purchasing.common.IStore -> com.unity.purchasing.common.IStore:
    void RetrieveProducts(java.util.List) -> RetrieveProducts
    void Purchase(com.unity.purchasing.common.ProductDefinition) -> Purchase
    void Purchase(com.unity.purchasing.common.ProductDefinition,java.lang.String) -> Purchase
    void FinishTransaction(com.unity.purchasing.common.ProductDefinition,java.lang.String) -> FinishTransaction
com.unity.purchasing.common.IStoreCallback -> com.unity.purchasing.common.IStoreCallback:
    void OnSetupFailed(com.unity.purchasing.common.InitializationFailureReason) -> OnSetupFailed
    void OnProductsRetrieved(java.util.List) -> OnProductsRetrieved
    void OnPurchaseSucceeded(java.lang.String,java.lang.String,java.lang.String) -> OnPurchaseSucceeded
    void OnPurchaseFailed(com.unity.purchasing.common.PurchaseFailureDescription) -> OnPurchaseFailed
com.unity.purchasing.common.IUnityCallback -> com.unity.purchasing.common.IUnityCallback:
    void OnSetupFailed(java.lang.String) -> OnSetupFailed
    void OnProductsRetrieved(java.lang.String) -> OnProductsRetrieved
    void OnPurchaseSucceeded(java.lang.String,java.lang.String,java.lang.String) -> OnPurchaseSucceeded
    void OnPurchaseFailed(java.lang.String) -> OnPurchaseFailed
com.unity.purchasing.common.InitializationFailureReason -> com.unity.purchasing.common.InitializationFailureReason:
    com.unity.purchasing.common.InitializationFailureReason PurchasingUnavailable -> PurchasingUnavailable
    com.unity.purchasing.common.InitializationFailureReason NoProductsAvailable -> NoProductsAvailable
    com.unity.purchasing.common.InitializationFailureReason AppNotKnown -> AppNotKnown
    com.unity.purchasing.common.InitializationFailureReason[] $VALUES -> a
    com.unity.purchasing.common.InitializationFailureReason[] values() -> values
    com.unity.purchasing.common.InitializationFailureReason valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.unity.purchasing.common.ProductDefinition -> com.unity.purchasing.common.ProductDefinition:
    java.lang.String id -> id
    java.lang.String storeSpecificId -> storeSpecificId
    com.unity.purchasing.common.ProductType type -> type
    void <init>(java.lang.String,java.lang.String,com.unity.purchasing.common.ProductType) -> <init>
    void <init>(java.lang.String,com.unity.purchasing.common.ProductType) -> <init>
com.unity.purchasing.common.ProductDescription -> com.unity.purchasing.common.ProductDescription:
    java.lang.String storeSpecificId -> storeSpecificId
    com.unity.purchasing.common.ProductMetadata metadata -> metadata
    java.lang.String receipt -> receipt
    java.lang.String transactionId -> transactionId
    void <init>(java.lang.String,com.unity.purchasing.common.ProductMetadata,java.lang.String,java.lang.String) -> <init>
    java.lang.String toString() -> toString
com.unity.purchasing.common.ProductMetadata -> com.unity.purchasing.common.ProductMetadata:
    java.lang.String localizedPriceString -> localizedPriceString
    java.lang.String localizedTitle -> localizedTitle
    java.lang.String localizedDescription -> localizedDescription
    java.lang.String isoCurrencyCode -> isoCurrencyCode
    java.math.BigDecimal localizedPrice -> localizedPrice
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal) -> <init>
    java.lang.String toString() -> toString
com.unity.purchasing.common.ProductType -> com.unity.purchasing.common.ProductType:
    com.unity.purchasing.common.ProductType Consumable -> Consumable
    com.unity.purchasing.common.ProductType NonConsumable -> NonConsumable
    com.unity.purchasing.common.ProductType Subscription -> Subscription
    com.unity.purchasing.common.ProductType[] $VALUES -> a
    com.unity.purchasing.common.ProductType[] values() -> values
    com.unity.purchasing.common.ProductType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.unity.purchasing.common.PurchaseFailedEvent -> com.unity.purchasing.common.PurchaseFailedEvent:
    void <init>() -> <init>
    java.lang.String jsonEncodePurchaseFailure(java.lang.String,com.unity.purchasing.common.PurchaseFailureReason,java.lang.String) -> jsonEncodePurchaseFailure
com.unity.purchasing.common.PurchaseFailureDescription -> com.unity.purchasing.common.PurchaseFailureDescription:
    java.lang.String productId -> productId
    com.unity.purchasing.common.PurchaseFailureReason reason -> reason
    java.lang.String message -> message
    java.lang.String storeSpecificErrorCode -> storeSpecificErrorCode
    void <init>(java.lang.String,com.unity.purchasing.common.PurchaseFailureReason,java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String,com.unity.purchasing.common.PurchaseFailureReason) -> <init>
    boolean equals(java.lang.Object) -> equals
    boolean equalsAllFields(com.unity.purchasing.common.PurchaseFailureDescription) -> equalsAllFields
    java.lang.String toString() -> toString
com.unity.purchasing.common.PurchaseFailureReason -> com.unity.purchasing.common.PurchaseFailureReason:
    com.unity.purchasing.common.PurchaseFailureReason BillingUnavailable -> BillingUnavailable
    com.unity.purchasing.common.PurchaseFailureReason ExistingPurchasePending -> ExistingPurchasePending
    com.unity.purchasing.common.PurchaseFailureReason ItemUnavailable -> ItemUnavailable
    com.unity.purchasing.common.PurchaseFailureReason SignatureInvalid -> SignatureInvalid
    com.unity.purchasing.common.PurchaseFailureReason UserCancelled -> UserCancelled
    com.unity.purchasing.common.PurchaseFailureReason PaymentDeclined -> PaymentDeclined
    com.unity.purchasing.common.PurchaseFailureReason DuplicateTransaction -> DuplicateTransaction
    com.unity.purchasing.common.PurchaseFailureReason Unknown -> Unknown
    com.unity.purchasing.common.PurchaseFailureReason[] $VALUES -> a
    com.unity.purchasing.common.PurchaseFailureReason[] values() -> values
    com.unity.purchasing.common.PurchaseFailureReason valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.unity.purchasing.common.SaneJSONObject -> com.unity.purchasing.common.SaneJSONObject:
    void <init>() -> <init>
    org.json.JSONObject put(java.lang.String,double) -> put
    org.json.JSONObject put(java.lang.String,java.lang.Object) -> put
    org.json.JSONObject put(java.lang.String,boolean) -> put
com.unity.purchasing.common.StoreDeserializer -> com.unity.purchasing.common.StoreDeserializer:
    void <init>() -> <init>
    void RetrieveProducts(java.lang.String) -> RetrieveProducts
    void Purchase(java.lang.String,java.lang.String) -> Purchase
    void FinishTransaction(java.lang.String,java.lang.String) -> FinishTransaction
    java.util.List DeserializeProducts(java.lang.String) -> DeserializeProducts
    com.unity.purchasing.common.ProductDefinition GetProductDefinition(java.lang.String) -> GetProductDefinition
    com.unity.purchasing.common.ProductDefinition GetProductDefinition(org.json.JSONObject) -> a
com.unity.purchasing.common.UnityPurchasing -> com.unity.purchasing.common.UnityPurchasing:
    com.unity.purchasing.common.IUnityCallback bridge -> a
    void <init>(com.unity.purchasing.common.IUnityCallback) -> <init>
    void OnSetupFailed(com.unity.purchasing.common.InitializationFailureReason) -> OnSetupFailed
    void OnProductsRetrieved(java.util.List) -> OnProductsRetrieved
    void OnPurchaseSucceeded(java.lang.String,java.lang.String,java.lang.String) -> OnPurchaseSucceeded
    void OnPurchaseFailed(com.unity.purchasing.common.PurchaseFailureDescription) -> OnPurchaseFailed
    java.lang.String SerialisePurchaseFailure(com.unity.purchasing.common.PurchaseFailureDescription) -> SerialisePurchaseFailure
    java.lang.String SerialiseProducts(java.util.List) -> SerialiseProducts
    org.json.JSONObject SerialiseProduct(com.unity.purchasing.common.ProductDescription) -> a
    org.json.JSONObject SerialiseMetadata(com.unity.purchasing.common.ProductMetadata) -> a
com.unity.purchasing.googleplay.ActivityLauncher -> com.unity.purchasing.googleplay.ActivityLauncher:
    void <init>() -> <init>
    void startIntentSenderForResult(android.app.Activity,android.app.PendingIntent,int,android.content.Intent,java.lang.String) -> startIntentSenderForResult
    void startActivity(android.content.Context,android.content.Intent) -> startActivity
com.unity.purchasing.googleplay.BillingServiceManager -> com.unity.purchasing.googleplay.BillingServiceManager:
    boolean logInfoDebugEnabled -> a
    com.android.vending.billing.IInAppBillingService mService -> b
    android.content.ServiceConnection mServiceConn -> c
    android.content.Context context -> d
    java.util.concurrent.ExecutorService executor -> e
    android.content.Intent googlePlayBillingServiceIntent -> f
    java.util.concurrent.ConcurrentLinkedQueue callbacks -> g
    boolean mIsBound -> h
    void <init>(android.content.Context) -> <init>
    void initialise() -> initialise
    android.content.Intent getGooglePlayServiceIntent() -> b
    void bindToGooglePlayService() -> a
    boolean billingAvailable() -> billingAvailable
    void workWith(com.unity.purchasing.googleplay.BillingServiceProcessor) -> workWith
    void dispose() -> dispose
    void setLogLevel(int) -> setLogLevel
    void tryPumpCallbacks() -> c
    void logError(java.lang.String) -> a
    void logDebug(java.lang.String) -> b
    void access$000(com.unity.purchasing.googleplay.BillingServiceManager,java.lang.String) -> a
    boolean access$100(com.unity.purchasing.googleplay.BillingServiceManager) -> a
    android.content.ServiceConnection access$200(com.unity.purchasing.googleplay.BillingServiceManager) -> b
    boolean access$102(com.unity.purchasing.googleplay.BillingServiceManager,boolean) -> a
    com.android.vending.billing.IInAppBillingService access$302(com.unity.purchasing.googleplay.BillingServiceManager,com.android.vending.billing.IInAppBillingService) -> a
    java.util.concurrent.ConcurrentLinkedQueue access$400(com.unity.purchasing.googleplay.BillingServiceManager) -> c
    java.util.concurrent.ExecutorService access$500(com.unity.purchasing.googleplay.BillingServiceManager) -> d
    void access$600(com.unity.purchasing.googleplay.BillingServiceManager) -> e
    com.android.vending.billing.IInAppBillingService access$300(com.unity.purchasing.googleplay.BillingServiceManager) -> f
    void <clinit>() -> <clinit>
com.unity.purchasing.googleplay.BillingServiceManager$1 -> com.unity.purchasing.googleplay.BillingServiceManager$1:
    android.content.Context val$context -> a
    com.unity.purchasing.googleplay.BillingServiceManager this$0 -> b
    void <init>(com.unity.purchasing.googleplay.BillingServiceManager,android.content.Context) -> <init>
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.unity.purchasing.googleplay.BillingServiceManager$1$1 -> com.unity.purchasing.googleplay.BillingServiceManager$1$1:
    com.unity.purchasing.googleplay.BillingServiceManager$1 this$1 -> a
    void <init>(com.unity.purchasing.googleplay.BillingServiceManager$1) -> <init>
    void run() -> run
com.unity.purchasing.googleplay.BillingServiceManager$1$2 -> com.unity.purchasing.googleplay.BillingServiceManager$1$2:
    android.os.IBinder val$service -> a
    com.unity.purchasing.googleplay.BillingServiceManager$1 this$1 -> b
    void <init>(com.unity.purchasing.googleplay.BillingServiceManager$1,android.os.IBinder) -> <init>
    void run() -> run
com.unity.purchasing.googleplay.BillingServiceManager$2 -> com.unity.purchasing.googleplay.BillingServiceManager$2:
    com.unity.purchasing.googleplay.BillingServiceManager this$0 -> a
    void <init>(com.unity.purchasing.googleplay.BillingServiceManager) -> <init>
    void run() -> run
com.unity.purchasing.googleplay.BillingServiceProcessor -> com.unity.purchasing.googleplay.BillingServiceProcessor:
    void workWith(com.android.vending.billing.IInAppBillingService) -> workWith
com.unity.purchasing.googleplay.BuildConfig -> com.unity.purchasing.googleplay.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.unity.purchasing.googleplay.Consts -> com.unity.purchasing.googleplay.Consts:
    java.lang.String MARKET_BILLING_SERVICE_ACTION -> MARKET_BILLING_SERVICE_ACTION
    java.lang.String ACTION_CONFIRM_NOTIFICATION -> ACTION_CONFIRM_NOTIFICATION
    java.lang.String ACTION_GET_PURCHASE_INFORMATION -> ACTION_GET_PURCHASE_INFORMATION
    java.lang.String ACTION_RESTORE_TRANSACTIONS -> ACTION_RESTORE_TRANSACTIONS
    java.lang.String ACTION_NOTIFY -> ACTION_NOTIFY
    java.lang.String ACTION_RESPONSE_CODE -> ACTION_RESPONSE_CODE
    java.lang.String ACTION_PURCHASE_STATE_CHANGED -> ACTION_PURCHASE_STATE_CHANGED
    java.lang.String NOTIFICATION_ID -> NOTIFICATION_ID
    java.lang.String INAPP_SIGNED_DATA -> INAPP_SIGNED_DATA
    java.lang.String INAPP_SIGNATURE -> INAPP_SIGNATURE
    java.lang.String INAPP_REQUEST_ID -> INAPP_REQUEST_ID
    java.lang.String INAPP_RESPONSE_CODE -> INAPP_RESPONSE_CODE
    java.lang.String BILLING_REQUEST_METHOD -> BILLING_REQUEST_METHOD
    java.lang.String BILLING_REQUEST_API_VERSION -> BILLING_REQUEST_API_VERSION
    java.lang.String BILLING_REQUEST_PACKAGE_NAME -> BILLING_REQUEST_PACKAGE_NAME
    java.lang.String BILLING_REQUEST_ITEM_ID -> BILLING_REQUEST_ITEM_ID
    java.lang.String BILLING_REQUEST_ITEM_TYPE -> BILLING_REQUEST_ITEM_TYPE
    java.lang.String BILLING_REQUEST_DEVELOPER_PAYLOAD -> BILLING_REQUEST_DEVELOPER_PAYLOAD
    java.lang.String BILLING_REQUEST_NOTIFY_IDS -> BILLING_REQUEST_NOTIFY_IDS
    java.lang.String BILLING_REQUEST_NONCE -> BILLING_REQUEST_NONCE
    java.lang.String BILLING_RESPONSE_RESPONSE_CODE -> BILLING_RESPONSE_RESPONSE_CODE
    java.lang.String BILLING_RESPONSE_PURCHASE_INTENT -> BILLING_RESPONSE_PURCHASE_INTENT
    java.lang.String BILLING_RESPONSE_REQUEST_ID -> BILLING_RESPONSE_REQUEST_ID
    long BILLING_RESPONSE_INVALID_REQUEST_ID -> BILLING_RESPONSE_INVALID_REQUEST_ID
    java.lang.String ITEM_TYPE_INAPP -> ITEM_TYPE_INAPP
    java.lang.String ITEM_TYPE_SUBSCRIPTION -> ITEM_TYPE_SUBSCRIPTION
    boolean DEBUG -> DEBUG
    int LOGLEVEL_ALL -> LOGLEVEL_ALL
    int LOGLEVEL_WARNING_ERROR -> LOGLEVEL_WARNING_ERROR
    java.lang.String FEATURE_FLAG_DUPE_PURCHASEFAILUREREASON -> FEATURE_FLAG_DUPE_PURCHASEFAILUREREASON
    java.lang.String FEATURE_FLAG_PERSISTENTDATAPATH_ASSIGN -> FEATURE_FLAG_PERSISTENTDATAPATH_ASSIGN
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.unity.purchasing.googleplay.Consts$PurchaseState -> com.unity.purchasing.googleplay.Consts$PurchaseState:
    com.unity.purchasing.googleplay.Consts$PurchaseState PURCHASED -> PURCHASED
    com.unity.purchasing.googleplay.Consts$PurchaseState CANCELED -> CANCELED
    com.unity.purchasing.googleplay.Consts$PurchaseState REFUNDED -> REFUNDED
    com.unity.purchasing.googleplay.Consts$PurchaseState[] $VALUES -> a
    com.unity.purchasing.googleplay.Consts$PurchaseState[] values() -> values
    com.unity.purchasing.googleplay.Consts$PurchaseState valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    com.unity.purchasing.googleplay.Consts$PurchaseState valueOf(int) -> valueOf
    void <clinit>() -> <clinit>
com.unity.purchasing.googleplay.Consts$ResponseCode -> com.unity.purchasing.googleplay.Consts$ResponseCode:
    com.unity.purchasing.googleplay.Consts$ResponseCode RESULT_OK -> RESULT_OK
    com.unity.purchasing.googleplay.Consts$ResponseCode RESULT_USER_CANCELED -> RESULT_USER_CANCELED
    com.unity.purchasing.googleplay.Consts$ResponseCode RESULT_SERVICE_UNAVAILABLE -> RESULT_SERVICE_UNAVAILABLE
    com.unity.purchasing.googleplay.Consts$ResponseCode RESULT_BILLING_UNAVAILABLE -> RESULT_BILLING_UNAVAILABLE
    com.unity.purchasing.googleplay.Consts$ResponseCode RESULT_ITEM_UNAVAILABLE -> RESULT_ITEM_UNAVAILABLE
    com.unity.purchasing.googleplay.Consts$ResponseCode RESULT_DEVELOPER_ERROR -> RESULT_DEVELOPER_ERROR
    com.unity.purchasing.googleplay.Consts$ResponseCode RESULT_ERROR -> RESULT_ERROR
    com.unity.purchasing.googleplay.Consts$ResponseCode[] $VALUES -> a
    com.unity.purchasing.googleplay.Consts$ResponseCode[] values() -> values
    com.unity.purchasing.googleplay.Consts$ResponseCode valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    com.unity.purchasing.googleplay.Consts$ResponseCode valueOf(int) -> valueOf
    void <clinit>() -> <clinit>
com.unity.purchasing.googleplay.FailedPurchaseReconciler -> com.unity.purchasing.googleplay.FailedPurchaseReconciler:
    com.unity.purchasing.googleplay.IGooglePlayPurchasing purchasing -> h
    java.util.concurrent.ConcurrentLinkedQueue failures -> a
    java.util.concurrent.ConcurrentLinkedQueue inputFailures -> b
    java.util.concurrent.Executor executor -> c
    com.unity.purchasing.googleplay.FailedPurchaseReconciler$ReconciliationState state -> d
    boolean isQueryFailed -> e
    boolean isQueryDone -> f
    boolean isProcessingDone -> g
    void <init>(com.unity.purchasing.googleplay.IGooglePlayPurchasing) -> <init>
    void <init>(com.unity.purchasing.googleplay.IGooglePlayPurchasing,java.util.concurrent.Executor) -> <init>
    void retryReconcileAsync(com.unity.purchasing.common.PurchaseFailureDescription,boolean) -> retryReconcileAsync
    void retryReconcileAsync(java.util.Set) -> retryReconcileAsync
    com.unity.purchasing.common.PurchaseFailureDescription addFailureDescription(com.unity.purchasing.common.PurchaseFailureDescription,boolean) -> a
    void reconcileFailures() -> a
    void ingestBatchOfInputsSafely() -> b
    void query(boolean,boolean) -> a
    void processFailures() -> c
    boolean isReconcilingFailure(java.lang.String) -> a
    void access$000(com.unity.purchasing.googleplay.FailedPurchaseReconciler) -> a
    void access$100(com.unity.purchasing.googleplay.FailedPurchaseReconciler,boolean,boolean) -> a
    void access$200(com.unity.purchasing.googleplay.FailedPurchaseReconciler) -> b
    com.unity.purchasing.googleplay.IGooglePlayPurchasing access$300(com.unity.purchasing.googleplay.FailedPurchaseReconciler) -> c
com.unity.purchasing.googleplay.FailedPurchaseReconciler$1 -> com.unity.purchasing.googleplay.FailedPurchaseReconciler$1:
    com.unity.purchasing.googleplay.FailedPurchaseReconciler this$0 -> a
    void <init>(com.unity.purchasing.googleplay.FailedPurchaseReconciler) -> <init>
    void run() -> run
com.unity.purchasing.googleplay.FailedPurchaseReconciler$2 -> com.unity.purchasing.googleplay.FailedPurchaseReconciler$2:
    boolean val$wantSuper -> a
    boolean val$wantRegular -> b
    com.unity.purchasing.googleplay.FailedPurchaseReconciler this$0 -> c
    void <init>(com.unity.purchasing.googleplay.FailedPurchaseReconciler,boolean,boolean) -> <init>
    void workWith(com.android.vending.billing.IInAppBillingService) -> workWith
com.unity.purchasing.googleplay.FailedPurchaseReconciler$3 -> com.unity.purchasing.googleplay.FailedPurchaseReconciler$3:
    com.unity.purchasing.googleplay.FailedPurchaseReconciler this$0 -> a
    void <init>(com.unity.purchasing.googleplay.FailedPurchaseReconciler) -> <init>
    void workWith(com.android.vending.billing.IInAppBillingService) -> workWith
com.unity.purchasing.googleplay.FailedPurchaseReconciler$4 -> com.unity.purchasing.googleplay.FailedPurchaseReconciler$4:
    int[] $SwitchMap$com$unity$purchasing$googleplay$FailedPurchaseReconciler$ReconciliationState -> a
    void <clinit>() -> <clinit>
com.unity.purchasing.googleplay.FailedPurchaseReconciler$ReconciliationRequest -> com.unity.purchasing.googleplay.FailedPurchaseReconciler$ReconciliationRequest:
    com.unity.purchasing.common.PurchaseFailureDescription failureDescription -> failureDescription
    boolean superReconcile -> a
    boolean hadPurchase -> b
    com.unity.purchasing.googleplay.Purchase oldPurchase -> c
    com.unity.purchasing.googleplay.FailedPurchaseReconciler this$0 -> d
    void <init>(com.unity.purchasing.googleplay.FailedPurchaseReconciler) -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.unity.purchasing.googleplay.FailedPurchaseReconciler$ReconciliationState -> com.unity.purchasing.googleplay.FailedPurchaseReconciler$ReconciliationState:
    com.unity.purchasing.googleplay.FailedPurchaseReconciler$ReconciliationState StateIdle -> StateIdle
    com.unity.purchasing.googleplay.FailedPurchaseReconciler$ReconciliationState StateQuerying -> StateQuerying
    com.unity.purchasing.googleplay.FailedPurchaseReconciler$ReconciliationState StateProcessing -> StateProcessing
    com.unity.purchasing.googleplay.FailedPurchaseReconciler$ReconciliationState[] $VALUES -> a
    com.unity.purchasing.googleplay.FailedPurchaseReconciler$ReconciliationState[] values() -> values
    com.unity.purchasing.googleplay.FailedPurchaseReconciler$ReconciliationState valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.unity.purchasing.googleplay.GooglePlayBillingUnAvailableException -> com.unity.purchasing.googleplay.GooglePlayBillingUnAvailableException:
    void <init>(java.lang.String) -> <init>
com.unity.purchasing.googleplay.GooglePlayPurchasing -> com.unity.purchasing.googleplay.GooglePlayPurchasing:
    int ACTIVITY_REQUEST_CODE -> ACTIVITY_REQUEST_CODE
    boolean SILENT_CONSUME -> SILENT_CONSUME
    boolean logInfoDebugEnabled -> logInfoDebugEnabled
    boolean aggressivelyRecoverLostPurchases -> d
    long CONSUMPTIONMANAGER_POLL_FAST_MS -> CONSUMPTIONMANAGER_POLL_FAST_MS
    long PURCHASEFAILURERECONCILER_POLL_FAST_MS -> PURCHASEFAILURERECONCILER_POLL_FAST_MS
    com.unity.purchasing.googleplay.IabHelper helper -> e
    boolean activityPending -> activityPending
    java.lang.String persistentDataPath -> f
    com.unity.purchasing.googleplay.GooglePlayPurchasing$ConsumptionManager consumptionManager -> a
    com.unity.purchasing.googleplay.FailedPurchaseReconciler failedPurchaseReconciler -> b
    com.unity.purchasing.googleplay.Inventory inventory -> g
    com.unity.purchasing.common.ProductDefinition productUnderPurchase -> h
    java.util.HashSet suspectFailedConsumableSkus -> i
    java.lang.String productJSON -> productJSON
    java.lang.Class aVRPurchaseActivity -> aVRPurchaseActivity
    java.lang.Class aPurchaseActivity -> aPurchaseActivity
    boolean isDaydreamApiAvailable -> j
    boolean isUnityVrEnabled -> k
    com.unity.purchasing.googleplay.GooglePlayPurchasing$Features features -> c
    com.unity.purchasing.googleplay.GooglePlayPurchasing instance -> l
    com.unity.purchasing.common.IStoreCallback unityPurchasing -> m
    com.unity.purchasing.googleplay.IBillingServiceManager manager -> n
    com.unity.purchasing.googleplay.ITimekeeper timekeeper -> o
    android.content.Context context -> p
    com.unity.purchasing.googleplay.IActivityLauncher launcher -> q
    com.unity.purchasing.googleplay.IabHelper$OnIabPurchaseFinishedListener PurchaseListener -> PurchaseListener
    android.content.BroadcastReceiver purchasesUpdatedReceiver -> r
    int offlineBackOffTime -> s
    boolean purchaseInProgress -> t
    boolean subscriptionUpdateInProgress -> u
    com.unity.purchasing.googleplay.IabHelper getHelper() -> getHelper
    void initPersistentDataPath(java.lang.String) -> e
    com.unity.purchasing.googleplay.Inventory getInventory() -> getInventory
    com.unity.purchasing.googleplay.GooglePlayPurchasing instance(com.unity.purchasing.common.IUnityCallback) -> instance
    boolean ContinuePurchase(android.app.Activity,java.lang.String,java.lang.String) -> ContinuePurchase
    boolean ContinueSubscriptionUpdate(android.app.Activity,java.lang.String,java.lang.String) -> ContinueSubscriptionUpdate
    void ProcessActivityResult(int,int,android.content.Intent) -> ProcessActivityResult
    com.unity.purchasing.googleplay.IBillingServiceManager getManager() -> getManager
    com.unity.purchasing.googleplay.ITimekeeper getTimekeeper() -> getTimekeeper
    void <init>(com.unity.purchasing.common.IStoreCallback,com.unity.purchasing.googleplay.IabHelper,com.unity.purchasing.googleplay.IBillingServiceManager,android.content.Context,com.unity.purchasing.googleplay.IActivityLauncher,java.lang.Class,java.lang.Class,com.unity.purchasing.googleplay.ITimekeeper) -> <init>
    void SetUnityVrEnabled(boolean) -> SetUnityVrEnabled
    void RestoreTransactions(com.unity.purchasing.googleplay.IGooglePlayStoreCallback) -> RestoreTransactions
    void handleInventoryUpdate(com.unity.purchasing.googleplay.Inventory) -> a
    void initInventory(com.unity.purchasing.googleplay.Inventory) -> b
    void UpgradeDowngradeSubscription(java.lang.String,java.lang.String) -> UpgradeDowngradeSubscription
    void StartSubscriptionUpdate(android.app.Activity,java.lang.String,java.lang.String) -> StartSubscriptionUpdate
    void StartPurchase(android.app.Activity,java.lang.String,java.lang.String) -> StartPurchase
    android.content.SharedPreferences getSharedPreferences() -> a
    void trackPurchase(java.lang.String,com.unity.purchasing.common.ProductType) -> a
    void untrackPurchase(java.lang.String) -> a
    java.lang.String addFreeTrialAndIntroPriceFlagToDeveloperPayload(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getUpdateMetadata(java.lang.String,com.unity.purchasing.googleplay.SkuDetails) -> a
    void pollForNewPurchases() -> b
    void registerPurchasesUpdatedReceiver() -> c
    void QueryInventory(java.util.List,long) -> a
    void NotifyUnityOfProducts(com.unity.purchasing.googleplay.Inventory) -> NotifyUnityOfProducts
    void onActivityResult(int,int,android.content.Intent) -> a
    com.unity.purchasing.googleplay.Purchase findPurchaseByOrderId(java.lang.String) -> f
    void NotifyUnityOfPurchase(com.unity.purchasing.googleplay.Purchase,boolean) -> NotifyUnityOfPurchase
    java.lang.String encodeReceipt(com.unity.purchasing.googleplay.Purchase,com.unity.purchasing.googleplay.SkuDetails) -> a
    void logError(java.lang.String) -> b
    void logError(java.lang.String,java.lang.String) -> a
    void log(java.lang.String) -> c
    void log(java.lang.String,java.lang.String) -> b
    void logDebug(java.lang.String) -> d
    void logDebug(java.lang.String,java.lang.String) -> c
    void RetrieveProducts(java.util.List) -> RetrieveProducts
    void Purchase(com.unity.purchasing.common.ProductDefinition) -> Purchase
    void Purchase(com.unity.purchasing.common.ProductDefinition,java.lang.String) -> Purchase
    android.content.Intent createPurchaseIntent(boolean) -> a
    void FinishTransaction(com.unity.purchasing.common.ProductDefinition,java.lang.String) -> FinishTransaction
    void finishTransactionInternal(java.lang.String) -> g
    void removeFromInventory(com.unity.purchasing.googleplay.Purchase) -> a
    void FinishAdditionalTransaction(java.lang.String,java.lang.String) -> FinishAdditionalTransaction
    void SetLogLevel(int) -> SetLogLevel
    void SetFeatures(java.lang.String) -> SetFeatures
    void SetAggressivelyRecoverLostPurchases(boolean) -> SetAggressivelyRecoverLostPurchases
    com.unity.purchasing.googleplay.ITimekeeper access$000(com.unity.purchasing.googleplay.GooglePlayPurchasing) -> a
    void access$100(com.unity.purchasing.googleplay.GooglePlayPurchasing,com.unity.purchasing.googleplay.Purchase) -> a
    com.unity.purchasing.googleplay.Inventory access$200(com.unity.purchasing.googleplay.GooglePlayPurchasing) -> b
    com.unity.purchasing.googleplay.IabHelper access$300(com.unity.purchasing.googleplay.GooglePlayPurchasing) -> c
    int access$400(com.unity.purchasing.googleplay.GooglePlayPurchasing) -> d
    void access$500(com.unity.purchasing.googleplay.GooglePlayPurchasing,com.unity.purchasing.googleplay.Inventory) -> a
    android.content.Context access$600(com.unity.purchasing.googleplay.GooglePlayPurchasing) -> e
    boolean access$700(com.unity.purchasing.googleplay.GooglePlayPurchasing) -> f
    boolean access$702(com.unity.purchasing.googleplay.GooglePlayPurchasing,boolean) -> a
    com.unity.purchasing.common.ProductDefinition access$800(com.unity.purchasing.googleplay.GooglePlayPurchasing) -> g
    java.util.HashSet access$900(com.unity.purchasing.googleplay.GooglePlayPurchasing) -> h
    boolean access$1000(com.unity.purchasing.googleplay.GooglePlayPurchasing) -> i
    com.unity.purchasing.common.IStoreCallback access$1100(com.unity.purchasing.googleplay.GooglePlayPurchasing) -> j
    void access$1200(com.unity.purchasing.googleplay.GooglePlayPurchasing) -> k
    void access$1300(com.unity.purchasing.googleplay.GooglePlayPurchasing,java.util.List,long) -> a
    int access$402(com.unity.purchasing.googleplay.GooglePlayPurchasing,int) -> a
    void <clinit>() -> <clinit>
com.unity.purchasing.googleplay.GooglePlayPurchasing$1 -> com.unity.purchasing.googleplay.GooglePlayPurchasing$1:
    com.unity.purchasing.googleplay.IGooglePlayStoreCallback val$callback -> a
    com.unity.purchasing.googleplay.GooglePlayPurchasing this$0 -> b
    void <init>(com.unity.purchasing.googleplay.GooglePlayPurchasing,com.unity.purchasing.googleplay.IGooglePlayStoreCallback) -> <init>
    void onQueryInventoryFinished(com.unity.purchasing.googleplay.IabResult,com.unity.purchasing.googleplay.Inventory) -> onQueryInventoryFinished
com.unity.purchasing.googleplay.GooglePlayPurchasing$1ThreadTimekeeper -> com.unity.purchasing.googleplay.GooglePlayPurchasing$1ThreadTimekeeper:
    void <init>() -> <init>
    void sleep(long) -> sleep
com.unity.purchasing.googleplay.GooglePlayPurchasing$2 -> com.unity.purchasing.googleplay.GooglePlayPurchasing$2:
    android.content.Intent val$subscriptionUpdateIntent -> a
    com.unity.purchasing.googleplay.GooglePlayPurchasing this$0 -> b
    void <init>(com.unity.purchasing.googleplay.GooglePlayPurchasing,android.content.Intent) -> <init>
    void run() -> run
com.unity.purchasing.googleplay.GooglePlayPurchasing$3 -> com.unity.purchasing.googleplay.GooglePlayPurchasing$3:
    com.unity.purchasing.googleplay.GooglePlayPurchasing this$0 -> a
    void <init>(com.unity.purchasing.googleplay.GooglePlayPurchasing) -> <init>
    void onIabPurchaseFinished(com.unity.purchasing.googleplay.IabResult,com.unity.purchasing.googleplay.Purchase) -> onIabPurchaseFinished
com.unity.purchasing.googleplay.GooglePlayPurchasing$4 -> com.unity.purchasing.googleplay.GooglePlayPurchasing$4:
    com.unity.purchasing.googleplay.GooglePlayPurchasing this$0 -> a
    void <init>(com.unity.purchasing.googleplay.GooglePlayPurchasing) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.unity.purchasing.googleplay.GooglePlayPurchasing$5 -> com.unity.purchasing.googleplay.GooglePlayPurchasing$5:
    java.util.List val$skus -> a
    com.unity.purchasing.googleplay.GooglePlayPurchasing this$0 -> b
    void <init>(com.unity.purchasing.googleplay.GooglePlayPurchasing,java.util.List) -> <init>
    void onQueryInventoryFinished(com.unity.purchasing.googleplay.IabResult,com.unity.purchasing.googleplay.Inventory) -> onQueryInventoryFinished
com.unity.purchasing.googleplay.GooglePlayPurchasing$6 -> com.unity.purchasing.googleplay.GooglePlayPurchasing$6:
    java.util.List val$skus -> a
    com.unity.purchasing.googleplay.GooglePlayPurchasing this$0 -> b
    void <init>(com.unity.purchasing.googleplay.GooglePlayPurchasing,java.util.List) -> <init>
    void onIabSetupFinished(com.unity.purchasing.googleplay.IabResult) -> onIabSetupFinished
com.unity.purchasing.googleplay.GooglePlayPurchasing$7 -> com.unity.purchasing.googleplay.GooglePlayPurchasing$7:
    android.content.Intent val$purchaseIntent -> a
    com.unity.purchasing.googleplay.GooglePlayPurchasing this$0 -> b
    void <init>(com.unity.purchasing.googleplay.GooglePlayPurchasing,android.content.Intent) -> <init>
    void run() -> run
com.unity.purchasing.googleplay.GooglePlayPurchasing$8 -> com.unity.purchasing.googleplay.GooglePlayPurchasing$8:
    com.unity.purchasing.googleplay.GooglePlayPurchasing this$0 -> a
    void <init>(com.unity.purchasing.googleplay.GooglePlayPurchasing) -> <init>
    void onConsumeFinished(com.unity.purchasing.googleplay.Purchase,com.unity.purchasing.googleplay.IabResult) -> onConsumeFinished
com.unity.purchasing.googleplay.GooglePlayPurchasing$ConsumptionManager -> com.unity.purchasing.googleplay.GooglePlayPurchasing$ConsumptionManager:
    java.util.concurrent.ConcurrentLinkedQueue purchases -> a
    java.util.concurrent.ExecutorService executor -> b
    com.unity.purchasing.googleplay.Purchase currentPurchase -> c
    boolean isCurrentPurchaseConsumed -> d
    com.unity.purchasing.googleplay.GooglePlayPurchasing this$0 -> e
    void <init>(com.unity.purchasing.googleplay.GooglePlayPurchasing) -> <init>
    void consumePurchases() -> a
    void startConsumeAsync() -> b
    void finishConsumeAsync(boolean) -> a
    void retryConsumeAsync(com.unity.purchasing.googleplay.Purchase) -> retryConsumeAsync
    boolean isConsumingSku(java.lang.String) -> a
com.unity.purchasing.googleplay.GooglePlayPurchasing$ConsumptionManager$1 -> com.unity.purchasing.googleplay.GooglePlayPurchasing$ConsumptionManager$1:
    com.unity.purchasing.googleplay.GooglePlayPurchasing$ConsumptionManager this$1 -> a
    void <init>(com.unity.purchasing.googleplay.GooglePlayPurchasing$ConsumptionManager) -> <init>
    void run() -> run
com.unity.purchasing.googleplay.GooglePlayPurchasing$ConsumptionManager$2 -> com.unity.purchasing.googleplay.GooglePlayPurchasing$ConsumptionManager$2:
    int val$originalLogLevel -> a
    com.unity.purchasing.googleplay.GooglePlayPurchasing$ConsumptionManager this$1 -> b
    void <init>(com.unity.purchasing.googleplay.GooglePlayPurchasing$ConsumptionManager,int) -> <init>
    void onConsumeFinished(com.unity.purchasing.googleplay.Purchase,com.unity.purchasing.googleplay.IabResult) -> onConsumeFinished
com.unity.purchasing.googleplay.GooglePlayPurchasing$Features -> com.unity.purchasing.googleplay.GooglePlayPurchasing$Features:
    boolean supportsPurchaseFailureReasonDuplicateTransaction -> supportsPurchaseFailureReasonDuplicateTransaction
    com.unity.purchasing.googleplay.GooglePlayPurchasing this$0 -> a
    void <init>(com.unity.purchasing.googleplay.GooglePlayPurchasing) -> <init>
com.unity.purchasing.googleplay.IActivityLauncher -> com.unity.purchasing.googleplay.IActivityLauncher:
    void startIntentSenderForResult(android.app.Activity,android.app.PendingIntent,int,android.content.Intent,java.lang.String) -> startIntentSenderForResult
    void startActivity(android.content.Context,android.content.Intent) -> startActivity
com.unity.purchasing.googleplay.IBillingServiceManager -> com.unity.purchasing.googleplay.IBillingServiceManager:
    void initialise() -> initialise
    void workWith(com.unity.purchasing.googleplay.BillingServiceProcessor) -> workWith
    void dispose() -> dispose
    void setLogLevel(int) -> setLogLevel
com.unity.purchasing.googleplay.IGooglePlayPurchasing -> com.unity.purchasing.googleplay.IGooglePlayPurchasing:
    com.unity.purchasing.googleplay.IabHelper getHelper() -> getHelper
    com.unity.purchasing.googleplay.Inventory getInventory() -> getInventory
    com.unity.purchasing.googleplay.ITimekeeper getTimekeeper() -> getTimekeeper
    com.unity.purchasing.googleplay.IBillingServiceManager getManager() -> getManager
    void NotifyUnityOfProducts(com.unity.purchasing.googleplay.Inventory) -> NotifyUnityOfProducts
    void NotifyUnityOfPurchase(com.unity.purchasing.googleplay.Purchase,boolean) -> NotifyUnityOfPurchase
    void SetAggressivelyRecoverLostPurchases(boolean) -> SetAggressivelyRecoverLostPurchases
com.unity.purchasing.googleplay.IGooglePlayStoreCallback -> com.unity.purchasing.googleplay.IGooglePlayStoreCallback:
    void OnTransactionsRestored(boolean) -> OnTransactionsRestored
com.unity.purchasing.googleplay.IPurchaseActivity -> com.unity.purchasing.googleplay.IPurchaseActivity:
    void processActivityResult(int,int,android.content.Intent) -> processActivityResult
com.unity.purchasing.googleplay.ITimekeeper -> com.unity.purchasing.googleplay.ITimekeeper:
    void sleep(long) -> sleep
com.unity.purchasing.googleplay.IabException -> com.unity.purchasing.googleplay.IabException:
    com.unity.purchasing.googleplay.IabResult mResult -> a
    void <init>(com.unity.purchasing.googleplay.IabResult) -> <init>
    void <init>(int,java.lang.String) -> <init>
    void <init>(com.unity.purchasing.googleplay.IabResult,java.lang.Exception) -> <init>
    void <init>(int,java.lang.String,java.lang.Exception) -> <init>
    com.unity.purchasing.googleplay.IabResult getResult() -> getResult
com.unity.purchasing.googleplay.IabHelper -> com.unity.purchasing.googleplay.IabHelper:
    boolean mDebugLog -> a
    java.lang.String mDebugTag -> b
    boolean mSetupDone -> c
    boolean mDisposed -> d
    boolean mSubscriptionsSupported -> e
    boolean mSubscriptionUpgradeDowngradeSupported -> f
    boolean mSubscriptionPurchaseHistorySupported -> g
    boolean mVrSupported -> m
    boolean mUnityVrEnabled -> n
    boolean mDaydreamApiAvailable -> o
    java.lang.String mAsyncOperation -> h
    android.content.Context mContext -> i
    com.unity.purchasing.googleplay.IBillingServiceManager serviceManager -> p
    com.unity.purchasing.googleplay.IActivityLauncher launcher -> q
    int mRequestCode -> j
    java.lang.String mPurchasingItemType -> k
    com.unity.purchasing.googleplay.Inventory inv -> r
    int BILLING_RESPONSE_RESULT_OK -> BILLING_RESPONSE_RESULT_OK
    int BILLING_RESPONSE_RESULT_USER_CANCELED -> BILLING_RESPONSE_RESULT_USER_CANCELED
    int BILLING_RESPONSE_RESULT_SERVICE_UNAVAILABLE -> BILLING_RESPONSE_RESULT_SERVICE_UNAVAILABLE
    int BILLING_RESPONSE_RESULT_BILLING_UNAVAILABLE -> BILLING_RESPONSE_RESULT_BILLING_UNAVAILABLE
    int BILLING_RESPONSE_RESULT_ITEM_UNAVAILABLE -> BILLING_RESPONSE_RESULT_ITEM_UNAVAILABLE
    int BILLING_RESPONSE_RESULT_DEVELOPER_ERROR -> BILLING_RESPONSE_RESULT_DEVELOPER_ERROR
    int BILLING_RESPONSE_RESULT_ERROR -> BILLING_RESPONSE_RESULT_ERROR
    int BILLING_RESPONSE_RESULT_ITEM_ALREADY_OWNED -> BILLING_RESPONSE_RESULT_ITEM_ALREADY_OWNED
    int BILLING_RESPONSE_RESULT_ITEM_NOT_OWNED -> BILLING_RESPONSE_RESULT_ITEM_NOT_OWNED
    int IABHELPER_ERROR_BASE -> IABHELPER_ERROR_BASE
    int IABHELPER_REMOTE_EXCEPTION -> IABHELPER_REMOTE_EXCEPTION
    int IABHELPER_BAD_RESPONSE -> IABHELPER_BAD_RESPONSE
    int IABHELPER_VERIFICATION_FAILED -> IABHELPER_VERIFICATION_FAILED
    int IABHELPER_SEND_INTENT_FAILED -> IABHELPER_SEND_INTENT_FAILED
    int IABHELPER_USER_CANCELLED -> IABHELPER_USER_CANCELLED
    int IABHELPER_UNKNOWN_PURCHASE_RESPONSE -> IABHELPER_UNKNOWN_PURCHASE_RESPONSE
    int IABHELPER_MISSING_TOKEN -> IABHELPER_MISSING_TOKEN
    int IABHELPER_UNKNOWN_ERROR -> IABHELPER_UNKNOWN_ERROR
    int IABHELPER_SUBSCRIPTIONS_NOT_AVAILABLE -> IABHELPER_SUBSCRIPTIONS_NOT_AVAILABLE
    int IABHELPER_INVALID_CONSUMPTION -> IABHELPER_INVALID_CONSUMPTION
    java.lang.String RESPONSE_CODE -> RESPONSE_CODE
    java.lang.String RESPONSE_GET_SKU_DETAILS_LIST -> RESPONSE_GET_SKU_DETAILS_LIST
    java.lang.String RESPONSE_BUY_INTENT -> RESPONSE_BUY_INTENT
    java.lang.String RESPONSE_INAPP_PURCHASE_DATA -> RESPONSE_INAPP_PURCHASE_DATA
    java.lang.String RESPONSE_INAPP_SIGNATURE -> RESPONSE_INAPP_SIGNATURE
    java.lang.String RESPONSE_INAPP_ITEM_LIST -> RESPONSE_INAPP_ITEM_LIST
    java.lang.String RESPONSE_INAPP_PURCHASE_DATA_LIST -> RESPONSE_INAPP_PURCHASE_DATA_LIST
    java.lang.String RESPONSE_INAPP_SIGNATURE_LIST -> RESPONSE_INAPP_SIGNATURE_LIST
    java.lang.String INAPP_CONTINUATION_TOKEN -> INAPP_CONTINUATION_TOKEN
    java.lang.String ITEM_TYPE_INAPP -> ITEM_TYPE_INAPP
    java.lang.String ITEM_TYPE_SUBS -> ITEM_TYPE_SUBS
    java.lang.String GET_SKU_DETAILS_ITEM_LIST -> GET_SKU_DETAILS_ITEM_LIST
    java.lang.String GET_SKU_DETAILS_ITEM_TYPE_LIST -> GET_SKU_DETAILS_ITEM_TYPE_LIST
    java.util.HashMap billingResponseCodeNames -> billingResponseCodeNames
    com.unity.purchasing.googleplay.IabHelper$OnIabPurchaseFinishedListener mPurchaseListener -> l
    void <init>(android.content.Context,com.unity.purchasing.googleplay.IBillingServiceManager,com.unity.purchasing.googleplay.IActivityLauncher) -> <init>
    void enableDebugLogging(boolean,java.lang.String) -> enableDebugLogging
    void enableDebugLogging(boolean) -> enableDebugLogging
    void enableUnityVr(boolean) -> enableUnityVr
    void enableDaydreamApi(boolean) -> enableDaydreamApi
    void startSetup(com.unity.purchasing.googleplay.IabHelper$OnIabSetupFinishedListener) -> startSetup
    void finishSetup(com.unity.purchasing.googleplay.IabHelper$OnIabSetupFinishedListener,com.android.vending.billing.IInAppBillingService) -> a
    void dispose() -> dispose
    boolean subscriptionsSupported() -> subscriptionsSupported
    boolean subscriptionPurchaseHistorySupported() -> subscriptionPurchaseHistorySupported
    boolean subscriptionUpgradeDowngradeSupported() -> subscriptionUpgradeDowngradeSupported
    void launchPurchaseFlow(android.app.Activity,java.lang.String,int,com.unity.purchasing.googleplay.IabHelper$OnIabPurchaseFinishedListener) -> launchPurchaseFlow
    void launchPurchaseFlow(android.app.Activity,java.lang.String,int,com.unity.purchasing.googleplay.IabHelper$OnIabPurchaseFinishedListener,java.lang.String) -> launchPurchaseFlow
    void launchSubscriptionPurchaseFlow(android.app.Activity,java.lang.String,int,com.unity.purchasing.googleplay.IabHelper$OnIabPurchaseFinishedListener) -> launchSubscriptionPurchaseFlow
    void launchSubscriptionPurchaseFlow(android.app.Activity,java.lang.String,int,com.unity.purchasing.googleplay.IabHelper$OnIabPurchaseFinishedListener,java.lang.String) -> launchSubscriptionPurchaseFlow
    void launchSubscriptionUpdateFlow(android.app.Activity,java.lang.String,java.util.List,int,com.unity.purchasing.googleplay.IabHelper$OnIabPurchaseFinishedListener,java.lang.String) -> launchSubscriptionUpdateFlow
    void launchPurchaseFlow(android.app.Activity,java.lang.String,java.lang.String,int,com.unity.purchasing.googleplay.IabHelper$OnIabPurchaseFinishedListener,java.lang.String) -> launchPurchaseFlow
    boolean handleActivityResult(int,int,android.content.Intent) -> handleActivityResult
    com.unity.purchasing.googleplay.Inventory queryInventory(boolean,java.util.List,com.android.vending.billing.IInAppBillingService) -> queryInventory
    com.unity.purchasing.googleplay.Inventory queryInventory(boolean,java.util.List,java.util.List,com.android.vending.billing.IInAppBillingService) -> queryInventory
    void queryInventoryAsync(boolean,java.util.List,com.unity.purchasing.googleplay.IabHelper$QueryInventoryFinishedListener,long) -> queryInventoryAsync
    void queryInventoryAsync(com.unity.purchasing.googleplay.IabHelper$QueryInventoryFinishedListener) -> queryInventoryAsync
    void queryInventoryAsync(boolean,com.unity.purchasing.googleplay.IabHelper$QueryInventoryFinishedListener) -> queryInventoryAsync
    void consume(com.unity.purchasing.googleplay.Purchase,com.android.vending.billing.IInAppBillingService) -> a
    void consumeSilently(com.unity.purchasing.googleplay.Purchase,com.android.vending.billing.IInAppBillingService) -> b
    void consumeAsync(com.unity.purchasing.googleplay.Purchase,com.unity.purchasing.googleplay.IabHelper$OnConsumeFinishedListener,boolean) -> consumeAsync
    void consumeAsync(java.util.List,com.unity.purchasing.googleplay.IabHelper$OnConsumeMultiFinishedListener,boolean) -> consumeAsync
    java.lang.String getResponseDesc(int) -> getResponseDesc
    void checkSetupDone(java.lang.String) -> a
    int getResponseCodeFromBundle(android.os.Bundle) -> a
    int getResponseCodeFromIntent(android.content.Intent) -> a
    int queryPurchaseHistory(com.unity.purchasing.googleplay.Inventory,java.lang.String,com.android.vending.billing.IInAppBillingService) -> queryPurchaseHistory
    int queryPurchases(com.unity.purchasing.googleplay.Inventory,java.lang.String,com.android.vending.billing.IInAppBillingService) -> a
    int querySkuDetails(java.lang.String,com.unity.purchasing.googleplay.Inventory,java.util.List,com.android.vending.billing.IInAppBillingService) -> a
    void consumeAsyncInternal(java.util.List,com.unity.purchasing.googleplay.IabHelper$OnConsumeFinishedListener,com.unity.purchasing.googleplay.IabHelper$OnConsumeMultiFinishedListener,boolean) -> a
    java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    void logDebug(java.lang.String) -> b
    void logError(java.lang.String) -> c
    void logWarn(java.lang.String) -> d
    java.lang.String getAccountId(java.lang.String) -> e
    void access$000(com.unity.purchasing.googleplay.IabHelper,com.unity.purchasing.googleplay.IabHelper$OnIabSetupFinishedListener,com.android.vending.billing.IInAppBillingService) -> a
    boolean access$100(com.unity.purchasing.googleplay.IabHelper) -> a
    boolean access$200(com.unity.purchasing.googleplay.IabHelper) -> b
    com.unity.purchasing.googleplay.Inventory access$300(com.unity.purchasing.googleplay.IabHelper) -> c
    boolean access$400(com.unity.purchasing.googleplay.IabHelper) -> d
    com.unity.purchasing.googleplay.IActivityLauncher access$500(com.unity.purchasing.googleplay.IabHelper) -> e
    void <clinit>() -> <clinit>
com.unity.purchasing.googleplay.IabHelper$1 -> com.unity.purchasing.googleplay.IabHelper$1:
    com.unity.purchasing.googleplay.IabHelper$OnIabSetupFinishedListener val$listener -> a
    com.unity.purchasing.googleplay.IabHelper this$0 -> b
    void <init>(com.unity.purchasing.googleplay.IabHelper,com.unity.purchasing.googleplay.IabHelper$OnIabSetupFinishedListener) -> <init>
    void workWith(com.android.vending.billing.IInAppBillingService) -> workWith
com.unity.purchasing.googleplay.IabHelper$2 -> com.unity.purchasing.googleplay.IabHelper$2:
    java.lang.String val$sku -> a
    java.lang.String val$extraData -> b
    java.util.List val$oldSkus -> c
    android.app.Activity val$act -> d
    com.unity.purchasing.googleplay.IabHelper$OnIabPurchaseFinishedListener val$listener -> e
    int val$requestCode -> f
    com.unity.purchasing.googleplay.IabHelper this$0 -> g
    void <init>(com.unity.purchasing.googleplay.IabHelper,java.lang.String,java.lang.String,java.util.List,android.app.Activity,com.unity.purchasing.googleplay.IabHelper$OnIabPurchaseFinishedListener,int) -> <init>
    void workWith(com.android.vending.billing.IInAppBillingService) -> workWith
com.unity.purchasing.googleplay.IabHelper$2$1 -> com.unity.purchasing.googleplay.IabHelper$2$1:
    android.app.PendingIntent val$pendingIntent -> a
    com.unity.purchasing.googleplay.IabHelper$2 this$1 -> b
    void <init>(com.unity.purchasing.googleplay.IabHelper$2,android.app.PendingIntent) -> <init>
    void run() -> run
com.unity.purchasing.googleplay.IabHelper$3 -> com.unity.purchasing.googleplay.IabHelper$3:
    java.lang.String val$sku -> a
    java.lang.String val$itemType -> b
    java.lang.String val$extraData -> c
    android.app.Activity val$act -> d
    com.unity.purchasing.googleplay.IabHelper$OnIabPurchaseFinishedListener val$listener -> e
    int val$requestCode -> f
    com.unity.purchasing.googleplay.IabHelper this$0 -> g
    void <init>(com.unity.purchasing.googleplay.IabHelper,java.lang.String,java.lang.String,java.lang.String,android.app.Activity,com.unity.purchasing.googleplay.IabHelper$OnIabPurchaseFinishedListener,int) -> <init>
    void workWith(com.android.vending.billing.IInAppBillingService) -> workWith
com.unity.purchasing.googleplay.IabHelper$3$1 -> com.unity.purchasing.googleplay.IabHelper$3$1:
    android.app.PendingIntent val$pendingIntent -> a
    com.unity.purchasing.googleplay.IabHelper$3 this$1 -> b
    void <init>(com.unity.purchasing.googleplay.IabHelper$3,android.app.PendingIntent) -> <init>
    void run() -> run
com.unity.purchasing.googleplay.IabHelper$4 -> com.unity.purchasing.googleplay.IabHelper$4:
    long val$delay -> a
    boolean val$querySkuDetails -> b
    java.util.List val$moreSkus -> c
    com.unity.purchasing.googleplay.IabHelper$QueryInventoryFinishedListener val$listener -> d
    com.unity.purchasing.googleplay.IabHelper this$0 -> e
    void <init>(com.unity.purchasing.googleplay.IabHelper,long,boolean,java.util.List,com.unity.purchasing.googleplay.IabHelper$QueryInventoryFinishedListener) -> <init>
    void workWith(com.android.vending.billing.IInAppBillingService) -> workWith
com.unity.purchasing.googleplay.IabHelper$5 -> com.unity.purchasing.googleplay.IabHelper$5:
    java.util.List val$purchases -> a
    boolean val$isSilent -> b
    com.unity.purchasing.googleplay.IabHelper$OnConsumeFinishedListener val$singleListener -> c
    com.unity.purchasing.googleplay.IabHelper$OnConsumeMultiFinishedListener val$multiListener -> d
    com.unity.purchasing.googleplay.IabHelper this$0 -> e
    void <init>(com.unity.purchasing.googleplay.IabHelper,java.util.List,boolean,com.unity.purchasing.googleplay.IabHelper$OnConsumeFinishedListener,com.unity.purchasing.googleplay.IabHelper$OnConsumeMultiFinishedListener) -> <init>
    void workWith(com.android.vending.billing.IInAppBillingService) -> workWith
com.unity.purchasing.googleplay.IabHelper$OnConsumeFinishedListener -> com.unity.purchasing.googleplay.IabHelper$OnConsumeFinishedListener:
    void onConsumeFinished(com.unity.purchasing.googleplay.Purchase,com.unity.purchasing.googleplay.IabResult) -> onConsumeFinished
com.unity.purchasing.googleplay.IabHelper$OnConsumeMultiFinishedListener -> com.unity.purchasing.googleplay.IabHelper$OnConsumeMultiFinishedListener:
    void onConsumeMultiFinished(java.util.List,java.util.List) -> onConsumeMultiFinished
com.unity.purchasing.googleplay.IabHelper$OnIabPurchaseFinishedListener -> com.unity.purchasing.googleplay.IabHelper$OnIabPurchaseFinishedListener:
    void onIabPurchaseFinished(com.unity.purchasing.googleplay.IabResult,com.unity.purchasing.googleplay.Purchase) -> onIabPurchaseFinished
com.unity.purchasing.googleplay.IabHelper$OnIabSetupFinishedListener -> com.unity.purchasing.googleplay.IabHelper$OnIabSetupFinishedListener:
    void onIabSetupFinished(com.unity.purchasing.googleplay.IabResult) -> onIabSetupFinished
com.unity.purchasing.googleplay.IabHelper$QueryInventoryFinishedListener -> com.unity.purchasing.googleplay.IabHelper$QueryInventoryFinishedListener:
    void onQueryInventoryFinished(com.unity.purchasing.googleplay.IabResult,com.unity.purchasing.googleplay.Inventory) -> onQueryInventoryFinished
com.unity.purchasing.googleplay.IabResult -> com.unity.purchasing.googleplay.IabResult:
    int mResponse -> a
    java.lang.String mMessage -> b
    void <init>(int,java.lang.String) -> <init>
    int getResponse() -> getResponse
    java.lang.String getMessage() -> getMessage
    boolean isSuccess() -> isSuccess
    boolean isFailure() -> isFailure
    java.lang.String toString() -> toString
com.unity.purchasing.googleplay.Inventory -> com.unity.purchasing.googleplay.Inventory:
    java.util.Map mSkuMap -> mSkuMap
    java.util.Map mPurchaseMap -> a
    java.util.Map mConsumablePurchaseHistoryMap -> b
    java.util.Set mPurchaseHistoryOfSub -> c
    void <init>() -> <init>
    void initHistory(com.unity.purchasing.googleplay.Inventory) -> initHistory
    boolean hasSubscriptionPurchaseHistory(java.lang.String) -> hasSubscriptionPurchaseHistory
    java.util.List getSubscriptionsWithHistory() -> getSubscriptionsWithHistory
    com.unity.purchasing.googleplay.SkuDetails getSkuDetails(java.lang.String) -> getSkuDetails
    com.unity.purchasing.googleplay.Purchase getPurchase(java.lang.String) -> getPurchase
    com.unity.purchasing.googleplay.Purchase getConsumableHistoryPurchase(java.lang.String) -> getConsumableHistoryPurchase
    boolean hasPurchase(java.lang.String) -> hasPurchase
    boolean hasConsumablePurchaseHistory(java.lang.String) -> hasConsumablePurchaseHistory
    boolean hasDetails(java.lang.String) -> hasDetails
    void erasePurchase(java.lang.String) -> erasePurchase
    java.util.List getAllSkus(java.lang.String) -> a
    java.util.List getAllOwnedSkus(java.lang.String) -> b
    java.util.List getAllPurchases() -> a
    void addSkuDetails(com.unity.purchasing.googleplay.SkuDetails) -> a
    void addPurchase(com.unity.purchasing.googleplay.Purchase) -> a
    void addPurchaseToSubscriptionPurchaseHistory(java.lang.String) -> c
    void addPurchaseToConsumablePurchaseHistory(java.lang.String,com.unity.purchasing.googleplay.Purchase) -> a
    java.lang.String toString() -> toString
com.unity.purchasing.googleplay.Purchase -> com.unity.purchasing.googleplay.Purchase:
    java.lang.String mItemType -> a
    java.lang.String mOrderId -> b
    java.lang.String mPackageName -> c
    java.lang.String mSku -> d
    long mPurchaseTime -> e
    int mPurchaseState -> f
    java.lang.String mDeveloperPayload -> g
    java.lang.String mToken -> h
    java.lang.String mOriginalJson -> i
    java.lang.String mSignature -> j
    boolean autoRenewing -> k
    void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    java.lang.String getItemType() -> getItemType
    java.lang.String getOrderIdOrPurchaseToken() -> getOrderIdOrPurchaseToken
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getSku() -> getSku
    long getPurchaseTime() -> getPurchaseTime
    int getPurchaseState() -> getPurchaseState
    java.lang.String getDeveloperPayload() -> getDeveloperPayload
    java.lang.String getToken() -> getToken
    java.lang.String getOriginalJson() -> getOriginalJson
    java.lang.String getSignature() -> getSignature
    boolean getAutoRenewing() -> getAutoRenewing
    java.lang.String toString() -> toString
com.unity.purchasing.googleplay.PurchaseActivity -> com.unity.purchasing.googleplay.PurchaseActivity:
    boolean receivedResult -> a
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void processActivityResult(int,int,android.content.Intent) -> processActivityResult
com.unity.purchasing.googleplay.PurchaseFailedEvent -> com.unity.purchasing.googleplay.PurchaseFailedEvent:
    void <init>() -> <init>
    java.lang.String jsonEncodePurchaseFailure(java.lang.String,com.unity.purchasing.common.PurchaseFailureReason,java.lang.String) -> jsonEncodePurchaseFailure
com.unity.purchasing.googleplay.R -> com.unity.purchasing.googleplay.R:
    void <init>() -> <init>
com.unity.purchasing.googleplay.R$style -> com.unity.purchasing.googleplay.R$style:
    int VrActivityTheme -> VrActivityTheme
    void <init>() -> <init>
com.unity.purchasing.googleplay.SkuDetails -> com.unity.purchasing.googleplay.SkuDetails:
    java.lang.String mItemType -> a
    java.lang.String mSku -> b
    java.lang.String mType -> c
    java.lang.String mPrice -> d
    java.lang.String mTitle -> e
    java.lang.String mDescription -> f
    java.lang.String mJson -> g
    long priceInMicros -> h
    java.lang.String isoCurrencyCode -> i
    java.lang.String subscriptionPeriod -> j
    java.lang.String freeTrialPeriod -> k
    java.lang.String introductoryPrice -> l
    java.lang.String introductoryPricePeriod -> m
    int introductoryPriceCycles -> n
    long introductoryPriceInMicros -> o
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    java.lang.String getSku() -> getSku
    java.lang.String getType() -> getType
    java.lang.String getPrice() -> getPrice
    java.lang.String getTitle() -> getTitle
    java.lang.String getDescription() -> getDescription
    long getPriceInMicros() -> getPriceInMicros
    java.lang.String getISOCurrencyCode() -> getISOCurrencyCode
    java.lang.String getSubscriptionPeriod() -> getSubscriptionPeriod
    java.lang.String getFreeTrialPeriod() -> getFreeTrialPeriod
    java.lang.String getIntroductoryPrice() -> getIntroductoryPrice
    java.lang.String getIntroductoryPricePeriod() -> getIntroductoryPricePeriod
    int getIntroductoryPriceCycles() -> getIntroductoryPriceCycles
    long getIntroductoryPriceInMicros() -> getIntroductoryPriceInMicros
    java.lang.String toString() -> toString
    java.lang.String getOriginalJSON() -> getOriginalJSON
com.unity.purchasing.googleplay.VRPurchaseActivity -> com.unity.purchasing.googleplay.VRPurchaseActivity:
    void <init>() -> <init>
com.unity3d.player.AudioVolumeHandler -> com.unity3d.player.AudioVolumeHandler:
    com.unity3d.player.a a -> a
    void onAudioVolumeChanged(int) -> onAudioVolumeChanged
    void <init>(android.content.Context) -> <init>
    void a() -> a
com.unity3d.player.BuildConfig -> com.unity3d.player.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String LIBRARY_PACKAGE_NAME -> LIBRARY_PACKAGE_NAME
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
com.unity3d.player.Camera2Wrapper -> com.unity3d.player.Camera2Wrapper:
    android.content.Context a -> a
    com.unity3d.player.b b -> b
    int c -> c
    void <init>(android.content.Context) -> <init>
    void a() -> a
    void initCamera2Jni() -> initCamera2Jni
    void deinitCamera2Jni() -> deinitCamera2Jni
    void nativeFrameReady(java.lang.Object,java.lang.Object,java.lang.Object,int,int,int) -> nativeFrameReady
    void nativeSurfaceTextureReady(java.lang.Object) -> nativeSurfaceTextureReady
    int getCamera2Count() -> getCamera2Count
    int getCamera2SensorOrientation(int) -> getCamera2SensorOrientation
    boolean isCamera2FrontFacing(int) -> isCamera2FrontFacing
    int getCamera2FocalLengthEquivalent(int) -> getCamera2FocalLengthEquivalent
    int[] getCamera2Resolutions(int) -> getCamera2Resolutions
    boolean initializeCamera2(int,int,int,int,int) -> initializeCamera2
    boolean isCamera2AutoFocusPointSupported(int) -> isCamera2AutoFocusPointSupported
    boolean setAutoFocusPoint(float,float) -> setAutoFocusPoint
    android.graphics.Rect getFrameSizeCamera2() -> getFrameSizeCamera2
    void closeCamera2() -> closeCamera2
    void startCamera2() -> startCamera2
    void pauseCamera2() -> pauseCamera2
    void stopCamera2() -> stopCamera2
    int a(float) -> a
    java.lang.Object getCameraFocusArea(float,float) -> getCameraFocusArea
    void a(java.lang.Object,java.lang.Object,java.lang.Object,int,int,int) -> a
    void a(java.lang.Object) -> a
com.unity3d.player.GoogleARCoreApi -> com.unity3d.player.GoogleARCoreApi:
    void <init>() -> <init>
    void initializeARCore(android.app.Activity) -> initializeARCore
    void pauseARCore() -> pauseARCore
    void resumeARCore() -> resumeARCore
com.unity3d.player.GoogleVrApi -> com.unity3d.player.GoogleVrApi:
    java.util.concurrent.atomic.AtomicReference a -> a
    void <init>() -> <init>
    void a(com.unity3d.player.f) -> a
    void a() -> a
    com.unity3d.player.GoogleVrProxy b() -> b
    com.unity3d.player.GoogleVrVideo getGoogleVrVideo() -> getGoogleVrVideo
    void <clinit>() -> <clinit>
com.unity3d.player.GoogleVrProxy -> com.unity3d.player.GoogleVrProxy:
    boolean f -> f
    boolean g -> g
    java.lang.Runnable h -> h
    java.util.Vector i -> i
    android.view.SurfaceView j -> j
    com.unity3d.player.GoogleVrProxy$a k -> k
    java.lang.Thread l -> l
    android.os.Handler m -> m
    void <init>(com.unity3d.player.f) -> <init>
    void a(boolean) -> a
    boolean d() -> d
    boolean a() -> a
    void a(android.content.Intent) -> a
    void e() -> e
    void pauseGvrLayout() -> pauseGvrLayout
    void b() -> b
    void resumeGvrLayout() -> resumeGvrLayout
    boolean a(android.app.Activity,android.content.Context,android.view.SurfaceView,java.lang.Runnable) -> a
    long loadGoogleVr(boolean,boolean,boolean,boolean,boolean) -> loadGoogleVr
    void setGoogleVrModeEnabled(boolean) -> setGoogleVrModeEnabled
    void unloadGoogleVr() -> unloadGoogleVr
    int getVideoSurfaceId() -> getVideoSurfaceId
    java.lang.Object getVideoSurface() -> getVideoSurface
    void registerGoogleVrVideoListener(com.unity3d.player.GoogleVrVideo$GoogleVrVideoCallbacks) -> registerGoogleVrVideoListener
    void deregisterGoogleVrVideoListener(com.unity3d.player.GoogleVrVideo$GoogleVrVideoCallbacks) -> deregisterGoogleVrVideoListener
    void setVideoLocationTransform(float[]) -> setVideoLocationTransform
    void c() -> c
    boolean a(java.lang.ClassLoader) -> a
    boolean f() -> f
    void initVrJni() -> initVrJni
    void setVrVideoTransform(float[][]) -> setVrVideoTransform
    boolean isQuiting() -> isQuiting
    java.util.Vector a(com.unity3d.player.GoogleVrProxy) -> a
    java.lang.Runnable b(com.unity3d.player.GoogleVrProxy) -> b
    com.unity3d.player.GoogleVrProxy$a c(com.unity3d.player.GoogleVrProxy) -> c
    boolean d(com.unity3d.player.GoogleVrProxy) -> d
    void a(com.unity3d.player.GoogleVrProxy,boolean) -> a
com.unity3d.player.GoogleVrProxy$1 -> com.unity3d.player.GoogleVrProxy$1:
    com.unity3d.player.GoogleVrProxy a -> a
    void <init>(com.unity3d.player.GoogleVrProxy,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.unity3d.player.GoogleVrProxy$2 -> com.unity3d.player.GoogleVrProxy$2:
    java.util.concurrent.atomic.AtomicLong a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    com.unity3d.player.GoogleVrProxy g -> g
    void <init>(com.unity3d.player.GoogleVrProxy,java.util.concurrent.atomic.AtomicLong,boolean,boolean,boolean,boolean,boolean) -> <init>
    void run() -> run
com.unity3d.player.GoogleVrProxy$3 -> com.unity3d.player.GoogleVrProxy$3:
    boolean a -> a
    com.unity3d.player.GoogleVrProxy b -> b
    void <init>(com.unity3d.player.GoogleVrProxy,boolean) -> <init>
    void run() -> run
com.unity3d.player.GoogleVrProxy$4 -> com.unity3d.player.GoogleVrProxy$4:
    com.unity3d.player.GoogleVrProxy a -> a
    void <init>(com.unity3d.player.GoogleVrProxy) -> <init>
    void run() -> run
com.unity3d.player.GoogleVrProxy$a -> com.unity3d.player.GoogleVrProxy$a:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    com.unity3d.player.GoogleVrProxy g -> g
    void <init>(com.unity3d.player.GoogleVrProxy) -> <init>
    boolean a() -> a
    void b() -> b
com.unity3d.player.GoogleVrVideo -> com.unity3d.player.GoogleVrVideo:
    void registerGoogleVrVideoListener(com.unity3d.player.GoogleVrVideo$GoogleVrVideoCallbacks) -> registerGoogleVrVideoListener
    void deregisterGoogleVrVideoListener(com.unity3d.player.GoogleVrVideo$GoogleVrVideoCallbacks) -> deregisterGoogleVrVideoListener
    void setVideoLocationTransform(float[]) -> setVideoLocationTransform
com.unity3d.player.GoogleVrVideo$GoogleVrVideoCallbacks -> com.unity3d.player.GoogleVrVideo$GoogleVrVideoCallbacks:
    void onSurfaceAvailable(android.view.Surface) -> onSurfaceAvailable
    void onSurfaceUnavailable() -> onSurfaceUnavailable
    void onFrameAvailable() -> onFrameAvailable
com.unity3d.player.HFPStatus -> com.unity3d.player.HFPStatus:
    android.content.Context a -> a
    android.content.BroadcastReceiver b -> b
    android.content.Intent c -> c
    boolean d -> d
    android.media.AudioManager e -> e
    int f -> f
    void initHFPStatusJni() -> initHFPStatusJni
    void deinitHFPStatusJni() -> deinitHFPStatusJni
    void <init>(android.content.Context) -> <init>
    void a() -> a
    void requestHFPStat() -> requestHFPStat
    boolean getHFPStat() -> getHFPStat
    boolean a(com.unity3d.player.HFPStatus) -> a
    android.media.AudioManager b(com.unity3d.player.HFPStatus) -> b
    boolean a(com.unity3d.player.HFPStatus,boolean) -> a
    int a(com.unity3d.player.HFPStatus,int) -> a
    int c(com.unity3d.player.HFPStatus) -> c
com.unity3d.player.HFPStatus$1 -> com.unity3d.player.HFPStatus$1:
    com.unity3d.player.HFPStatus a -> a
    void <init>(com.unity3d.player.HFPStatus) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.unity3d.player.HFPStatus$a -> com.unity3d.player.HFPStatus$a:
    int a -> a
    int b -> b
    int c -> c
    int[] d -> d
    void <clinit>() -> <clinit>
com.unity3d.player.IUnityPlayerLifecycleEvents -> com.unity3d.player.IUnityPlayerLifecycleEvents:
    void onUnityPlayerUnloaded() -> onUnityPlayerUnloaded
    void onUnityPlayerQuitted() -> onUnityPlayerQuitted
com.unity3d.player.NativeLoader -> com.unity3d.player.NativeLoader:
    boolean load(java.lang.String) -> load
    boolean unload() -> unload
com.unity3d.player.NetworkConnectivity -> com.unity3d.player.NetworkConnectivity:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    android.net.ConnectivityManager e -> e
    android.net.ConnectivityManager$NetworkCallback f -> f
    int a() -> a
    void <init>(android.content.Context) -> <init>
    void b() -> b
    int a(com.unity3d.player.NetworkConnectivity,int) -> a
com.unity3d.player.NetworkConnectivity$1 -> com.unity3d.player.NetworkConnectivity$1:
    com.unity3d.player.NetworkConnectivity a -> a
    void <init>(com.unity3d.player.NetworkConnectivity) -> <init>
    void onAvailable(android.net.Network) -> onAvailable
    void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities) -> onCapabilitiesChanged
    void onUnavailable() -> onUnavailable
    void onLost(android.net.Network) -> onLost
com.unity3d.player.R -> com.unity3d.player.R:
    void <init>() -> <init>
com.unity3d.player.R$style -> com.unity3d.player.R$style:
    int BaseUnityTheme -> BaseUnityTheme
    int UnityThemeSelector -> UnityThemeSelector
    int UnityThemeSelector_Translucent -> UnityThemeSelector_Translucent
    int VrActivityTheme -> VrActivityTheme
    void <init>() -> <init>
com.unity3d.player.ReflectionHelper -> com.unity3d.player.ReflectionHelper:
    boolean LOG -> LOG
    boolean LOGV -> LOGV
    com.unity3d.player.ReflectionHelper$a[] a -> a
    long b -> b
    void <init>() -> <init>
    boolean a(com.unity3d.player.ReflectionHelper$a) -> a
    void a(com.unity3d.player.ReflectionHelper$a,java.lang.reflect.Member) -> a
    java.lang.reflect.Constructor getConstructorID(java.lang.Class,java.lang.String) -> getConstructorID
    java.lang.reflect.Method getMethodID(java.lang.Class,java.lang.String,java.lang.String,boolean) -> getMethodID
    java.lang.reflect.Field getFieldID(java.lang.Class,java.lang.String,java.lang.String,boolean) -> getFieldID
    java.lang.String getFieldSignature(java.lang.reflect.Field) -> getFieldSignature
    float a(java.lang.Class,java.lang.Class) -> a
    float a(java.lang.Class,java.lang.Class[],java.lang.Class[]) -> a
    java.lang.Class[] a(java.lang.String) -> a
    java.lang.Class a(java.lang.String,int[]) -> a
    java.lang.Object nativeProxyInvoke(long,java.lang.String,java.lang.Object[]) -> nativeProxyInvoke
    void nativeProxyFinalize(long) -> nativeProxyFinalize
    void nativeProxyLogJNIInvokeException(long) -> nativeProxyLogJNIInvokeException
    void endUnityLaunch() -> endUnityLaunch
    java.lang.Object newProxyInstance(long,java.lang.Class) -> newProxyInstance
    void setNativeExceptionOnProxy(java.lang.Object,long,boolean) -> setNativeExceptionOnProxy
    java.lang.Object newProxyInstance(long,java.lang.Class[]) -> newProxyInstance
    long a() -> a
    void a(long) -> a
    java.lang.Object a(long,java.lang.String,java.lang.Object[]) -> a
    void b(long) -> b
    void <clinit>() -> <clinit>
com.unity3d.player.ReflectionHelper$1 -> com.unity3d.player.ReflectionHelper$1:
    long c -> c
    long d -> d
    boolean e -> e
    long a -> a
    java.lang.Class[] b -> b
    void <init>(long,java.lang.Class[]) -> <init>
    java.lang.Object a(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> a
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    void a(long,boolean) -> a
    void finalize() -> finalize
com.unity3d.player.ReflectionHelper$a -> com.unity3d.player.ReflectionHelper$a:
    java.lang.Class b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.reflect.Member a -> a
    void <init>(java.lang.Class,java.lang.String,java.lang.String) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.unity3d.player.ReflectionHelper$b -> com.unity3d.player.ReflectionHelper$b:
    void a(long,boolean) -> a
com.unity3d.player.UnityPlayer -> com.unity3d.player.UnityPlayer:
    android.app.Activity currentActivity -> currentActivity
    int mInitialScreenOrientation -> mInitialScreenOrientation
    boolean mMainDisplayOverride -> mMainDisplayOverride
    boolean mIsFullscreen -> mIsFullscreen
    com.unity3d.player.n mState -> mState
    java.util.concurrent.ConcurrentLinkedQueue m_Events -> m_Events
    android.content.BroadcastReceiver mKillingIsMyBusiness -> mKillingIsMyBusiness
    android.view.OrientationEventListener mOrientationListener -> mOrientationListener
    int mNaturalOrientation -> mNaturalOrientation
    int ANR_TIMEOUT_SECONDS -> ANR_TIMEOUT_SECONDS
    int RUN_STATE_CHANGED_MSG_CODE -> RUN_STATE_CHANGED_MSG_CODE
    com.unity3d.player.UnityPlayer$e m_MainThread -> m_MainThread
    boolean m_AddPhoneCallListener -> m_AddPhoneCallListener
    com.unity3d.player.UnityPlayer$c m_PhoneCallListener -> m_PhoneCallListener
    android.telephony.TelephonyManager m_TelephonyManager -> m_TelephonyManager
    android.content.ClipboardManager m_ClipboardManager -> m_ClipboardManager
    com.unity3d.player.l m_SplashScreen -> m_SplashScreen
    com.unity3d.player.GoogleARCoreApi m_ARCoreApi -> m_ARCoreApi
    com.unity3d.player.UnityPlayer$a m_FakeListener -> m_FakeListener
    com.unity3d.player.Camera2Wrapper m_Camera2Wrapper -> m_Camera2Wrapper
    com.unity3d.player.HFPStatus m_HFPStatus -> m_HFPStatus
    com.unity3d.player.AudioVolumeHandler m_AudioVolumeHandler -> m_AudioVolumeHandler
    android.net.Uri m_launchUri -> m_launchUri
    com.unity3d.player.NetworkConnectivity m_NetworkConnectivity -> m_NetworkConnectivity
    com.unity3d.player.IUnityPlayerLifecycleEvents m_UnityPlayerLifecycleEvents -> m_UnityPlayerLifecycleEvents
    android.content.Context mContext -> mContext
    android.view.SurfaceView mGlView -> mGlView
    boolean mQuitting -> mQuitting
    boolean mProcessKillRequested -> mProcessKillRequested
    com.unity3d.player.q mVideoPlayerProxy -> mVideoPlayerProxy
    com.unity3d.player.k mSoftInputDialog -> mSoftInputDialog
    java.lang.String SPLASH_ENABLE_METADATA_NAME -> SPLASH_ENABLE_METADATA_NAME
    java.lang.String SPLASH_MODE_METADATA_NAME -> SPLASH_MODE_METADATA_NAME
    java.lang.String ARCORE_ENABLE_METADATA_NAME -> ARCORE_ENABLE_METADATA_NAME
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents) -> <init>
    int getNaturalOrientation(int) -> getNaturalOrientation
    void onUnityPlayerUnloaded() -> onUnityPlayerUnloaded
    void onUnityPlayerQuitted() -> onUnityPlayerQuitted
    void toggleGyroscopeSensor(boolean) -> toggleGyroscopeSensor
    java.lang.String GetGlViewContentDescription(android.content.Context) -> GetGlViewContentDescription
    void DisableStaticSplashScreen() -> DisableStaticSplashScreen
    void EarlyEnableFullScreenIfVrLaunched(android.app.Activity) -> EarlyEnableFullScreenIfVrLaunched
    boolean IsWindowTranslucent() -> IsWindowTranslucent
    android.view.SurfaceView CreateGlView() -> CreateGlView
    void sendSurfaceChangedEvent() -> sendSurfaceChangedEvent
    void updateGLDisplay(int,android.view.Surface) -> updateGLDisplay
    boolean updateDisplayInternal(int,android.view.Surface) -> updateDisplayInternal
    boolean displayChanged(int,android.view.Surface) -> displayChanged
    void UnitySendMessage(java.lang.String,java.lang.String,java.lang.String) -> UnitySendMessage
    void nativeUnitySendMessage(java.lang.String,java.lang.String,byte[]) -> nativeUnitySendMessage
    void finish() -> finish
    void runOnAnonymousThread(java.lang.Runnable) -> runOnAnonymousThread
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    void postOnUiThread(java.lang.Runnable) -> postOnUiThread
    void init(int,boolean) -> init
    android.view.View getView() -> getView
    android.os.Bundle getSettings() -> getSettings
    void quit() -> quit
    void newIntent(android.content.Intent) -> newIntent
    void destroy() -> destroy
    void kill() -> kill
    void pause() -> pause
    void pauseUnity() -> pauseUnity
    void resume() -> resume
    void lowMemory() -> lowMemory
    void shutdown() -> shutdown
    void unload() -> unload
    void checkResumePlayer() -> checkResumePlayer
    boolean skipPermissionsDialog() -> skipPermissionsDialog
    void requestUserAuthorization(java.lang.String) -> requestUserAuthorization
    int getNetworkConnectivity() -> getNetworkConnectivity
    void configurationChanged(android.content.res.Configuration) -> configurationChanged
    void windowFocusChanged(boolean) -> windowFocusChanged
    boolean loadLibraryStatic(java.lang.String) -> loadLibraryStatic
    boolean loadLibrary(java.lang.String) -> loadLibrary
    void addPhoneCallListener() -> addPhoneCallListener
    void initJni(android.content.Context) -> initJni
    boolean nativeRender() -> nativeRender
    void nativeSetInputArea(int,int,int,int) -> nativeSetInputArea
    void nativeSetKeyboardIsVisible(boolean) -> nativeSetKeyboardIsVisible
    void nativeSetInputString(java.lang.String) -> nativeSetInputString
    void nativeSetInputSelection(int,int) -> nativeSetInputSelection
    void nativeSoftInputCanceled() -> nativeSoftInputCanceled
    void nativeSoftInputLostFocus() -> nativeSoftInputLostFocus
    void nativeReportKeyboardConfigChanged() -> nativeReportKeyboardConfigChanged
    boolean nativePause() -> nativePause
    void nativeResume() -> nativeResume
    void nativeLowMemory() -> nativeLowMemory
    void nativeApplicationUnload() -> nativeApplicationUnload
    void nativeFocusChanged(boolean) -> nativeFocusChanged
    void nativeRecreateGfxState(int,android.view.Surface) -> nativeRecreateGfxState
    void nativeSendSurfaceChangedEvent() -> nativeSendSurfaceChangedEvent
    boolean nativeDone() -> nativeDone
    void nativeSoftInputClosed() -> nativeSoftInputClosed
    boolean nativeInjectEvent(android.view.InputEvent) -> nativeInjectEvent
    boolean nativeIsAutorotationOn() -> nativeIsAutorotationOn
    void nativeMuteMasterAudio(boolean) -> nativeMuteMasterAudio
    void nativeRestartActivityIndicator() -> nativeRestartActivityIndicator
    void nativeSetLaunchURL(java.lang.String) -> nativeSetLaunchURL
    void nativeOrientationChanged(int,int) -> nativeOrientationChanged
    void loadNative(android.content.pm.ApplicationInfo) -> loadNative
    void unloadNative() -> unloadNative
    void showSoftInput(java.lang.String,int,boolean,boolean,boolean,boolean,java.lang.String,int,boolean) -> showSoftInput
    void hideSoftInput() -> hideSoftInput
    void setSoftInputStr(java.lang.String) -> setSoftInputStr
    void setCharacterLimit(int) -> setCharacterLimit
    void setHideInputField(boolean) -> setHideInputField
    void setSelection(int,int) -> setSelection
    java.lang.String getKeyboardLayout() -> getKeyboardLayout
    void reportSoftInputStr(java.lang.String,int,boolean) -> reportSoftInputStr
    void reportSoftInputSelection(int,int) -> reportSoftInputSelection
    void reportSoftInputArea(android.graphics.Rect) -> reportSoftInputArea
    void reportSoftInputIsVisible(boolean) -> reportSoftInputIsVisible
    void setClipboardText(java.lang.String) -> setClipboardText
    java.lang.String getClipboardText() -> getClipboardText
    java.lang.String getLaunchURL() -> getLaunchURL
    boolean initializeGoogleAr() -> initializeGoogleAr
    boolean initializeGoogleVr() -> initializeGoogleVr
    boolean showVideoPlayer(java.lang.String,int,int,int,boolean,int,int) -> showVideoPlayer
    void pauseJavaAndCallUnloadCallback() -> pauseJavaAndCallUnloadCallback
    android.content.pm.ApplicationInfo getApplicationInfo() -> getApplicationInfo
    boolean getSplashEnabled() -> getSplashEnabled
    boolean getARCoreEnabled() -> getARCoreEnabled
    int getSplashMode() -> getSplashMode
    void executeGLThreadJobs() -> executeGLThreadJobs
    void disableLogger() -> disableLogger
    void queueGLThreadEvent(java.lang.Runnable) -> queueGLThreadEvent
    void queueGLThreadEvent(com.unity3d.player.UnityPlayer$f) -> queueGLThreadEvent
    boolean isFinishing() -> isFinishing
    void hideStatusBar() -> hideStatusBar
    boolean injectEvent(android.view.InputEvent) -> injectEvent
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    void swapViews(android.view.View,android.view.View) -> swapViews
    boolean addViewToPlayer(android.view.View,boolean) -> addViewToPlayer
    void removeViewFromPlayer(android.view.View) -> removeViewFromPlayer
    void reportError(java.lang.String,java.lang.String) -> reportError
    java.lang.String getNetworkProxySettings(java.lang.String) -> getNetworkProxySettings
    boolean startOrientationListener(int) -> startOrientationListener
    boolean stopOrientationListener() -> stopOrientationListener
    void access$000(com.unity3d.player.UnityPlayer,boolean) -> access$000
    boolean access$100(com.unity3d.player.UnityPlayer) -> access$100
    void access$200(com.unity3d.player.UnityPlayer) -> access$200
    boolean access$300(com.unity3d.player.UnityPlayer) -> access$300
    void access$400(com.unity3d.player.UnityPlayer) -> access$400
    void access$500(com.unity3d.player.UnityPlayer,java.lang.String) -> access$500
    void access$600(com.unity3d.player.UnityPlayer,int,int) -> access$600
    void access$800(com.unity3d.player.UnityPlayer,boolean) -> access$800
    com.unity3d.player.l access$1000(com.unity3d.player.UnityPlayer) -> access$1000
    com.unity3d.player.l access$1002(com.unity3d.player.UnityPlayer,com.unity3d.player.l) -> access$1002
    void access$1100(com.unity3d.player.UnityPlayer,int,android.view.Surface) -> access$1100
    void access$1200(com.unity3d.player.UnityPlayer) -> access$1200
    void access$1300(com.unity3d.player.UnityPlayer) -> access$1300
    void access$1400(com.unity3d.player.UnityPlayer,int,android.view.Surface) -> access$1400
    boolean access$1500(com.unity3d.player.UnityPlayer) -> access$1500
    android.view.SurfaceView access$1600(com.unity3d.player.UnityPlayer) -> access$1600
    void access$1700(com.unity3d.player.UnityPlayer) -> access$1700
    boolean access$1800(com.unity3d.player.UnityPlayer) -> access$1800
    boolean access$1902(com.unity3d.player.UnityPlayer,boolean) -> access$1902
    void access$2000(com.unity3d.player.UnityPlayer) -> access$2000
    void access$2100(com.unity3d.player.UnityPlayer) -> access$2100
    android.content.Context access$2200(com.unity3d.player.UnityPlayer) -> access$2200
    void access$2300(com.unity3d.player.UnityPlayer) -> access$2300
    void access$2400(com.unity3d.player.UnityPlayer) -> access$2400
    void access$2600(com.unity3d.player.UnityPlayer) -> access$2600
    void access$2700(com.unity3d.player.UnityPlayer,java.lang.String) -> access$2700
    void access$2800(com.unity3d.player.UnityPlayer) -> access$2800
    void access$2900(com.unity3d.player.UnityPlayer,int,int) -> access$2900
    void access$3000(com.unity3d.player.UnityPlayer,int,int,int,int) -> access$3000
    void access$3100(com.unity3d.player.UnityPlayer,boolean) -> access$3100
    android.view.SurfaceView access$3200(com.unity3d.player.UnityPlayer) -> access$3200
    com.unity3d.player.q access$3302(com.unity3d.player.UnityPlayer,com.unity3d.player.q) -> access$3302
    boolean access$3400(com.unity3d.player.UnityPlayer) -> access$3400
    int access$3500(com.unity3d.player.UnityPlayer) -> access$3500
    com.unity3d.player.IUnityPlayerLifecycleEvents access$3600(com.unity3d.player.UnityPlayer) -> access$3600
    int access$3700(com.unity3d.player.UnityPlayer) -> access$3700
    void <clinit>() -> <clinit>
com.unity3d.player.UnityPlayer$1 -> com.unity3d.player.UnityPlayer$1:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.unity3d.player.UnityPlayer$10 -> com.unity3d.player.UnityPlayer$10:
    boolean a -> a
    java.lang.String b -> b
    int c -> c
    com.unity3d.player.UnityPlayer d -> d
    void <init>(com.unity3d.player.UnityPlayer,boolean,java.lang.String,int) -> <init>
    void a() -> a
com.unity3d.player.UnityPlayer$11 -> com.unity3d.player.UnityPlayer$11:
    int a -> a
    int b -> b
    com.unity3d.player.UnityPlayer c -> c
    void <init>(com.unity3d.player.UnityPlayer,int,int) -> <init>
    void a() -> a
com.unity3d.player.UnityPlayer$12 -> com.unity3d.player.UnityPlayer$12:
    android.graphics.Rect a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,android.graphics.Rect) -> <init>
    void a() -> a
com.unity3d.player.UnityPlayer$13 -> com.unity3d.player.UnityPlayer$13:
    boolean a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,boolean) -> <init>
    void a() -> a
com.unity3d.player.UnityPlayer$14 -> com.unity3d.player.UnityPlayer$14:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$15 -> com.unity3d.player.UnityPlayer$15:
    com.unity3d.player.GoogleVrProxy a -> a
    java.lang.Runnable b -> b
    java.util.concurrent.Semaphore c -> c
    com.unity3d.player.UnityPlayer d -> d
    void <init>(com.unity3d.player.UnityPlayer,com.unity3d.player.GoogleVrProxy,java.lang.Runnable,java.util.concurrent.Semaphore) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$16 -> com.unity3d.player.UnityPlayer$16:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void a() -> a
com.unity3d.player.UnityPlayer$17 -> com.unity3d.player.UnityPlayer$17:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$18 -> com.unity3d.player.UnityPlayer$18:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$19 -> com.unity3d.player.UnityPlayer$19:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer,android.content.Context,int) -> <init>
    void onOrientationChanged(int) -> onOrientationChanged
com.unity3d.player.UnityPlayer$2 -> com.unity3d.player.UnityPlayer$2:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$20 -> com.unity3d.player.UnityPlayer$20:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$21 -> com.unity3d.player.UnityPlayer$21:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
com.unity3d.player.UnityPlayer$22 -> com.unity3d.player.UnityPlayer$22:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$23 -> com.unity3d.player.UnityPlayer$23:
    int a -> a
    android.view.Surface b -> b
    java.util.concurrent.Semaphore c -> c
    com.unity3d.player.UnityPlayer d -> d
    void <init>(com.unity3d.player.UnityPlayer,int,android.view.Surface,java.util.concurrent.Semaphore) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$24 -> com.unity3d.player.UnityPlayer$24:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$25 -> com.unity3d.player.UnityPlayer$25:
    java.util.concurrent.Semaphore a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,java.util.concurrent.Semaphore) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$26 -> com.unity3d.player.UnityPlayer$26:
    java.util.concurrent.Semaphore a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,java.util.concurrent.Semaphore) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$3 -> com.unity3d.player.UnityPlayer$3:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$4 -> com.unity3d.player.UnityPlayer$4:
    com.unity3d.player.UnityPlayer a -> a
    java.lang.String b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    java.lang.String h -> h
    int i -> i
    boolean j -> j
    com.unity3d.player.UnityPlayer k -> k
    void <init>(com.unity3d.player.UnityPlayer,com.unity3d.player.UnityPlayer,java.lang.String,int,boolean,boolean,boolean,boolean,java.lang.String,int,boolean) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$4$1 -> com.unity3d.player.UnityPlayer$4$1:
    com.unity3d.player.UnityPlayer$4 a -> a
    void <init>(com.unity3d.player.UnityPlayer$4) -> <init>
    void onCancel(android.content.DialogInterface) -> onCancel
com.unity3d.player.UnityPlayer$5 -> com.unity3d.player.UnityPlayer$5:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$6 -> com.unity3d.player.UnityPlayer$6:
    java.lang.String a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,java.lang.String) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$7 -> com.unity3d.player.UnityPlayer$7:
    int a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,int) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$8 -> com.unity3d.player.UnityPlayer$8:
    boolean a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,boolean) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$9 -> com.unity3d.player.UnityPlayer$9:
    int a -> a
    int b -> b
    com.unity3d.player.UnityPlayer c -> c
    void <init>(com.unity3d.player.UnityPlayer,int,int) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$a -> com.unity3d.player.UnityPlayer$a:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.unity3d.player.UnityPlayer$b -> com.unity3d.player.UnityPlayer$b:
    int a -> a
    int b -> b
    int c -> c
    int[] d -> d
    void <clinit>() -> <clinit>
com.unity3d.player.UnityPlayer$c -> com.unity3d.player.UnityPlayer$c:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
    void <init>(com.unity3d.player.UnityPlayer,byte) -> <init>
com.unity3d.player.UnityPlayer$d -> com.unity3d.player.UnityPlayer$d:
    com.unity3d.player.UnityPlayer$d a -> a
    com.unity3d.player.UnityPlayer$d b -> b
    com.unity3d.player.UnityPlayer$d c -> c
    com.unity3d.player.UnityPlayer$d d -> d
    com.unity3d.player.UnityPlayer$d e -> e
    com.unity3d.player.UnityPlayer$d f -> f
    com.unity3d.player.UnityPlayer$d g -> g
    com.unity3d.player.UnityPlayer$d h -> h
    com.unity3d.player.UnityPlayer$d i -> i
    com.unity3d.player.UnityPlayer$d j -> j
    com.unity3d.player.UnityPlayer$d[] k -> k
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.unity3d.player.UnityPlayer$e -> com.unity3d.player.UnityPlayer$e:
    android.os.Handler a -> a
    boolean b -> b
    boolean c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    com.unity3d.player.UnityPlayer i -> i
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
    void a() -> a
    void b() -> b
    void a(java.lang.Runnable) -> a
    void c() -> c
    void d() -> d
    void b(java.lang.Runnable) -> b
    void c(java.lang.Runnable) -> c
    void d(java.lang.Runnable) -> d
    void e() -> e
    void a(com.unity3d.player.UnityPlayer$d) -> a
    void a(int,int) -> a
    void <init>(com.unity3d.player.UnityPlayer,byte) -> <init>
com.unity3d.player.UnityPlayer$e$1 -> com.unity3d.player.UnityPlayer$e$1:
    com.unity3d.player.UnityPlayer$e a -> a
    void <init>(com.unity3d.player.UnityPlayer$e) -> <init>
    void a() -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.unity3d.player.UnityPlayer$f -> com.unity3d.player.UnityPlayer$f:
    com.unity3d.player.UnityPlayer e -> e
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
    void a() -> a
    void <init>(com.unity3d.player.UnityPlayer,byte) -> <init>
com.unity3d.player.UnityPlayerActivity -> com.unity3d.player.UnityPlayerActivity:
    com.unity3d.player.UnityPlayer mUnityPlayer -> mUnityPlayer
    void <init>() -> <init>
    java.lang.String updateUnityCommandLineArguments(java.lang.String) -> updateUnityCommandLineArguments
    void onCreate(android.os.Bundle) -> onCreate
    void onUnityPlayerUnloaded() -> onUnityPlayerUnloaded
    void onUnityPlayerQuitted() -> onUnityPlayerQuitted
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void onLowMemory() -> onLowMemory
    void onTrimMemory(int) -> onTrimMemory
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
com.unity3d.player.a -> com.unity3d.player.a:
    android.content.Context a -> a
    android.media.AudioManager b -> b
    com.unity3d.player.a$a c -> c
    void <init>(android.content.Context) -> <init>
    void a(com.unity3d.player.a$b) -> a
    void a() -> a
com.unity3d.player.a$a -> com.unity3d.player.a$a:
    com.unity3d.player.a$b b -> b
    android.media.AudioManager c -> c
    int d -> d
    int e -> e
    com.unity3d.player.a a -> a
    void <init>(com.unity3d.player.a,android.os.Handler,android.media.AudioManager,int,com.unity3d.player.a$b) -> <init>
    void onChange(boolean,android.net.Uri) -> onChange
    boolean deliverSelfNotifications() -> deliverSelfNotifications
com.unity3d.player.a$b -> com.unity3d.player.a$b:
    void onAudioVolumeChanged(int) -> onAudioVolumeChanged
com.unity3d.player.b -> com.unity3d.player.b:
    com.unity3d.player.d a -> a
    android.hardware.camera2.CameraManager b -> b
    java.lang.String[] c -> c
    android.hardware.camera2.CameraDevice d -> d
    java.util.concurrent.Semaphore e -> e
    android.os.HandlerThread f -> f
    android.os.Handler g -> g
    android.graphics.Rect h -> h
    android.graphics.Rect i -> i
    int j -> j
    int k -> k
    float l -> l
    float m -> m
    int n -> n
    int o -> o
    boolean p -> p
    android.util.Range q -> q
    android.media.ImageReader r -> r
    android.media.Image s -> s
    android.hardware.camera2.CaptureRequest$Builder t -> t
    android.hardware.camera2.CameraCaptureSession u -> u
    java.lang.Object v -> v
    int w -> w
    android.graphics.SurfaceTexture x -> x
    android.view.Surface y -> y
    int z -> z
    android.hardware.camera2.CameraCaptureSession$CaptureCallback A -> A
    android.hardware.camera2.CameraDevice$StateCallback B -> B
    android.media.ImageReader$OnImageAvailableListener C -> C
    android.graphics.SurfaceTexture$OnFrameAvailableListener D -> D
    void <init>(com.unity3d.player.d) -> <init>
    android.hardware.camera2.CameraManager b(android.content.Context) -> b
    java.lang.String[] c(android.content.Context) -> c
    int a(android.content.Context) -> a
    int a(android.content.Context,int) -> a
    boolean b(android.content.Context,int) -> b
    boolean c(android.content.Context,int) -> c
    int d(android.content.Context,int) -> d
    android.util.Size[] a(android.hardware.camera2.CameraCharacteristics) -> a
    int[] e(android.content.Context,int) -> e
    void g() -> g
    void h() -> h
    boolean a(android.content.Context,int,int,int,int,int) -> a
    void b(android.hardware.camera2.CameraCharacteristics) -> b
    boolean a(float,float) -> a
    android.graphics.Rect a() -> a
    void b() -> b
    void i() -> i
    void a(java.lang.Object) -> a
    void j() -> j
    void k() -> k
    void c() -> c
    void d() -> d
    void e() -> e
    void a(android.hardware.camera2.CameraDevice) -> a
    android.graphics.Rect a(android.util.Size[],double,double) -> a
    int a(android.util.Range[],int) -> a
    void a(com.unity3d.player.b,java.lang.Object) -> a
    android.hardware.camera2.CameraDevice a(com.unity3d.player.b) -> a
    java.lang.Object b(com.unity3d.player.b) -> b
    android.hardware.camera2.CameraCaptureSession a(com.unity3d.player.b,android.hardware.camera2.CameraCaptureSession) -> a
    android.hardware.camera2.CaptureRequest$Builder a(com.unity3d.player.b,android.hardware.camera2.CaptureRequest$Builder) -> a
    android.view.Surface c(com.unity3d.player.b) -> c
    android.hardware.camera2.CaptureRequest$Builder d(com.unity3d.player.b) -> d
    android.media.ImageReader e(com.unity3d.player.b) -> e
    android.util.Range f(com.unity3d.player.b) -> f
    void g(com.unity3d.player.b) -> g
    android.hardware.camera2.CameraDevice a(com.unity3d.player.b,android.hardware.camera2.CameraDevice) -> a
    java.util.concurrent.Semaphore f() -> f
    void b(com.unity3d.player.b,android.hardware.camera2.CameraDevice) -> b
    com.unity3d.player.d h(com.unity3d.player.b) -> h
    android.media.Image i(com.unity3d.player.b) -> i
    android.media.Image a(com.unity3d.player.b,android.media.Image) -> a
    void <clinit>() -> <clinit>
com.unity3d.player.b$1 -> com.unity3d.player.b$1:
    com.unity3d.player.b a -> a
    void <init>(com.unity3d.player.b) -> <init>
    void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
    void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
    void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long) -> onCaptureSequenceCompleted
    void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int) -> onCaptureSequenceAborted
com.unity3d.player.b$2 -> com.unity3d.player.b$2:
    com.unity3d.player.b a -> a
    void <init>(com.unity3d.player.b) -> <init>
    void onConfigured(android.hardware.camera2.CameraCaptureSession) -> onConfigured
    void onConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onConfigureFailed
com.unity3d.player.b$3 -> com.unity3d.player.b$3:
    com.unity3d.player.b a -> a
    void <init>(com.unity3d.player.b) -> <init>
    void onOpened(android.hardware.camera2.CameraDevice) -> onOpened
    void onClosed(android.hardware.camera2.CameraDevice) -> onClosed
    void onDisconnected(android.hardware.camera2.CameraDevice) -> onDisconnected
    void onError(android.hardware.camera2.CameraDevice,int) -> onError
com.unity3d.player.b$4 -> com.unity3d.player.b$4:
    com.unity3d.player.b a -> a
    void <init>(com.unity3d.player.b) -> <init>
    void onImageAvailable(android.media.ImageReader) -> onImageAvailable
com.unity3d.player.b$5 -> com.unity3d.player.b$5:
    com.unity3d.player.b a -> a
    void <init>(com.unity3d.player.b) -> <init>
    void onFrameAvailable(android.graphics.SurfaceTexture) -> onFrameAvailable
com.unity3d.player.b$a -> com.unity3d.player.b$a:
    int a -> a
    int b -> b
    int c -> c
    int[] d -> d
    void <clinit>() -> <clinit>
com.unity3d.player.c -> com.unity3d.player.c:
    com.unity3d.player.o a -> a
    com.unity3d.player.f b -> b
    android.content.Context c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void <init>(java.lang.String,com.unity3d.player.f) -> <init>
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    boolean runOnUiThreadWithSync(java.lang.Runnable) -> runOnUiThreadWithSync
    void reportError(java.lang.String) -> reportError
com.unity3d.player.c$1 -> com.unity3d.player.c$1:
    java.lang.Runnable a -> a
    java.util.concurrent.Semaphore b -> b
    com.unity3d.player.c c -> c
    void <init>(com.unity3d.player.c,java.lang.Runnable,java.util.concurrent.Semaphore) -> <init>
    void run() -> run
com.unity3d.player.d -> com.unity3d.player.d:
    void a(java.lang.Object,java.lang.Object,java.lang.Object,int,int,int) -> a
    void a(java.lang.Object) -> a
com.unity3d.player.e -> com.unity3d.player.e:
    boolean a(android.app.Activity) -> a
    void a(android.app.Activity,java.lang.String) -> a
com.unity3d.player.f -> com.unity3d.player.f:
    boolean addViewToPlayer(android.view.View,boolean) -> addViewToPlayer
    void removeViewFromPlayer(android.view.View) -> removeViewFromPlayer
    void reportError(java.lang.String,java.lang.String) -> reportError
com.unity3d.player.g -> com.unity3d.player.g:
    boolean a -> a
    void Log(int,java.lang.String) -> Log
    void <clinit>() -> <clinit>
com.unity3d.player.h -> com.unity3d.player.h:
    void <init>() -> <init>
    boolean a(android.content.pm.PackageItemInfo) -> a
    boolean a(android.app.Activity) -> a
    void a(android.app.Activity,java.lang.String) -> a
com.unity3d.player.i -> com.unity3d.player.i:
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
com.unity3d.player.j -> com.unity3d.player.j:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    com.unity3d.player.e d -> d
    void <clinit>() -> <clinit>
com.unity3d.player.k -> com.unity3d.player.k:
    android.content.Context a -> a
    com.unity3d.player.UnityPlayer b -> b
    int c -> c
    int d -> d
    void <init>(android.content.Context,com.unity3d.player.UnityPlayer,java.lang.String,int,boolean,boolean,boolean,java.lang.String,int,boolean) -> <init>
    void a(boolean) -> a
    void a(android.widget.EditText,java.lang.String,int,boolean,boolean,boolean,java.lang.String,int) -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    int a(int,boolean,boolean,boolean) -> a
    void a(java.lang.String,boolean) -> a
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
    android.view.View createSoftInputView() -> createSoftInputView
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    void a(int) -> a
    void a(int,int) -> a
    java.lang.String a() -> a
    com.unity3d.player.UnityPlayer a(com.unity3d.player.k) -> a
    java.lang.String b(com.unity3d.player.k) -> b
    void a(com.unity3d.player.k,java.lang.String,boolean) -> a
    android.content.Context c(com.unity3d.player.k) -> c
    void <clinit>() -> <clinit>
com.unity3d.player.k$1 -> com.unity3d.player.k$1:
    android.view.View a -> a
    com.unity3d.player.k b -> b
    void <init>(com.unity3d.player.k,android.view.View) -> <init>
    void onGlobalLayout() -> onGlobalLayout
com.unity3d.player.k$2 -> com.unity3d.player.k$2:
    com.unity3d.player.k a -> a
    void <init>(com.unity3d.player.k) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.unity3d.player.k$3 -> com.unity3d.player.k$3:
    com.unity3d.player.k a -> a
    void <init>(com.unity3d.player.k,android.content.Context) -> <init>
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onSelectionChanged(int,int) -> onSelectionChanged
com.unity3d.player.k$4 -> com.unity3d.player.k$4:
    com.unity3d.player.k a -> a
    void <init>(com.unity3d.player.k) -> <init>
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.unity3d.player.l -> com.unity3d.player.l:
    int a -> a
    int b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    void <init>(android.content.Context,int) -> <init>
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
com.unity3d.player.l$1 -> com.unity3d.player.l$1:
    int[] a -> a
    void <clinit>() -> <clinit>
com.unity3d.player.l$a -> com.unity3d.player.l$a:
    int a -> a
    int b -> b
    int c -> c
    int[] d -> d
    int[] a() -> a
    void <clinit>() -> <clinit>
com.unity3d.player.m -> com.unity3d.player.m:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    void <init>() -> <init>
    boolean a() -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.unity3d.player.n -> com.unity3d.player.n:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    void <init>() -> <init>
    void a() -> a
    void b() -> b
    boolean c() -> c
    void a(boolean) -> a
    void b(boolean) -> b
    boolean d() -> d
    void c(boolean) -> c
    boolean e() -> e
    void d(boolean) -> d
    boolean f() -> f
    boolean g() -> g
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.unity3d.player.o -> com.unity3d.player.o:
    java.util.HashMap a -> a
    java.lang.Class b -> b
    java.lang.Object c -> c
    void <init>(java.lang.Class,java.lang.Object) -> <init>
    void a(java.lang.String,java.lang.Class[]) -> a
    void a(java.lang.String,com.unity3d.player.o$a) -> a
    java.lang.Object a(java.lang.String,java.lang.Object[]) -> a
com.unity3d.player.o$a -> com.unity3d.player.o$a:
    java.lang.Class[] a -> a
    java.lang.reflect.Method b -> b
    com.unity3d.player.o c -> c
    void <init>(com.unity3d.player.o,java.lang.Class[]) -> <init>
com.unity3d.player.p -> com.unity3d.player.p:
    boolean a -> a
    android.content.Context b -> b
    android.view.SurfaceView c -> c
    android.view.SurfaceHolder d -> d
    java.lang.String e -> e
    int f -> f
    int g -> g
    boolean h -> h
    long i -> i
    long j -> j
    android.widget.FrameLayout k -> k
    android.view.Display l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    android.media.MediaPlayer q -> q
    android.widget.MediaController r -> r
    boolean s -> s
    boolean t -> t
    int u -> u
    boolean v -> v
    boolean w -> w
    com.unity3d.player.p$a x -> x
    com.unity3d.player.p$b y -> y
    int z -> z
    void b(java.lang.String) -> b
    void <init>(android.content.Context,java.lang.String,int,int,int,boolean,long,long,com.unity3d.player.p$a) -> <init>
    boolean a() -> a
    void a(int) -> a
    void destroyPlayer() -> destroyPlayer
    void c() -> c
    void CancelOnPrepare() -> CancelOnPrepare
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onBufferingUpdate(android.media.MediaPlayer,int) -> onBufferingUpdate
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    void onVideoSizeChanged(android.media.MediaPlayer,int,int) -> onVideoSizeChanged
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void doCleanUp() -> doCleanUp
    void d() -> d
    void updateVideoLayout() -> updateVideoLayout
    boolean canPause() -> canPause
    boolean canSeekBackward() -> canSeekBackward
    boolean canSeekForward() -> canSeekForward
    int getBufferPercentage() -> getBufferPercentage
    int getCurrentPosition() -> getCurrentPosition
    int getDuration() -> getDuration
    boolean isPlaying() -> isPlaying
    void pause() -> pause
    void seekTo(int) -> seekTo
    void start() -> start
    int getAudioSessionId() -> getAudioSessionId
    boolean b() -> b
    void a(java.lang.String) -> a
    void <clinit>() -> <clinit>
com.unity3d.player.p$a -> com.unity3d.player.p$a:
    void a(int) -> a
com.unity3d.player.p$b -> com.unity3d.player.p$b:
    com.unity3d.player.p b -> b
    boolean c -> c
    com.unity3d.player.p a -> a
    void <init>(com.unity3d.player.p,com.unity3d.player.p) -> <init>
    void run() -> run
    void a() -> a
com.unity3d.player.q -> com.unity3d.player.q:
    com.unity3d.player.UnityPlayer a -> a
    android.content.Context b -> b
    com.unity3d.player.q$a c -> c
    java.util.concurrent.Semaphore d -> d
    java.util.concurrent.locks.Lock e -> e
    com.unity3d.player.p f -> f
    int g -> g
    boolean h -> h
    boolean i -> i
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    boolean a(android.content.Context,java.lang.String,int,int,int,boolean,long,long,com.unity3d.player.q$a) -> a
    void d() -> d
    void a() -> a
    void b() -> b
    void c() -> c
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    com.unity3d.player.p a(com.unity3d.player.q) -> a
    int a(com.unity3d.player.q,int) -> a
    java.util.concurrent.Semaphore b(com.unity3d.player.q) -> b
    com.unity3d.player.p a(com.unity3d.player.q,com.unity3d.player.p) -> a
    android.content.Context c(com.unity3d.player.q) -> c
    java.util.concurrent.locks.Lock d(com.unity3d.player.q) -> d
    boolean e(com.unity3d.player.q) -> e
    void f(com.unity3d.player.q) -> f
    com.unity3d.player.UnityPlayer g(com.unity3d.player.q) -> g
    boolean h(com.unity3d.player.q) -> h
com.unity3d.player.q$1 -> com.unity3d.player.q$1:
    java.lang.String a -> a
    int b -> b
    int c -> c
    int d -> d
    boolean e -> e
    long f -> f
    long g -> g
    com.unity3d.player.q h -> h
    void <init>(com.unity3d.player.q,java.lang.String,int,int,int,boolean,long,long) -> <init>
    void run() -> run
com.unity3d.player.q$1$1 -> com.unity3d.player.q$1$1:
    com.unity3d.player.q$1 a -> a
    void <init>(com.unity3d.player.q$1) -> <init>
    void a(int) -> a
com.unity3d.player.q$1$1$1 -> com.unity3d.player.q$1$1$1:
    com.unity3d.player.q$1$1 a -> a
    void <init>(com.unity3d.player.q$1$1) -> <init>
    void run() -> run
com.unity3d.player.q$2 -> com.unity3d.player.q$2:
    com.unity3d.player.q a -> a
    void <init>(com.unity3d.player.q) -> <init>
    void run() -> run
com.unity3d.player.q$3 -> com.unity3d.player.q$3:
    com.unity3d.player.q a -> a
    void <init>(com.unity3d.player.q) -> <init>
    void run() -> run
com.unity3d.player.q$4 -> com.unity3d.player.q$4:
    com.unity3d.player.q a -> a
    void <init>(com.unity3d.player.q) -> <init>
    void run() -> run
com.unity3d.player.q$a -> com.unity3d.player.q$a:
    void a() -> a
org.fmod.FMODAudioDevice -> org.fmod.FMODAudioDevice:
    java.lang.Thread a -> a
    boolean b -> b
    android.media.AudioTrack c -> c
    boolean d -> d
    java.nio.ByteBuffer e -> e
    byte[] f -> f
    org.fmod.a g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    void <init>() -> <init>
    void start() -> start
    void stop() -> stop
    void close() -> close
    boolean isRunning() -> isRunning
    void run() -> run
    void releaseAudioTrack() -> releaseAudioTrack
    int fmodGetInfo(int) -> fmodGetInfo
    int fmodProcess(java.nio.ByteBuffer) -> fmodProcess
    int fmodProcessMicData(java.nio.ByteBuffer,int) -> fmodProcessMicData
    int startAudioRecord(int,int,int) -> startAudioRecord
    void stopAudioRecord() -> stopAudioRecord
    void <clinit>() -> <clinit>
org.fmod.a -> org.fmod.a:
    org.fmod.FMODAudioDevice a -> a
    java.nio.ByteBuffer b -> b
    int c -> c
    int d -> d
    int e -> e
    java.lang.Thread f -> f
    boolean g -> g
    android.media.AudioRecord h -> h
    boolean i -> i
    void <init>(org.fmod.FMODAudioDevice,int,int) -> <init>
    int a() -> a
    void b() -> b
    void c() -> c
    void run() -> run
    void d() -> d
